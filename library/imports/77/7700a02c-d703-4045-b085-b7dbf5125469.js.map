{"version":3,"sources":["assets\\game_script\\scripts\\BlockCipher.js"],"names":["o","exports","BlockCipher","$cipher","require","$cBC","$pKCS7","l","t","e","i","call","Object","assign","blockSize","mode","CBC","padding","PKCS7","__extends","prototype","reset","cfg","Error","_xformMode","constructor","_ENC_XFORM_MODE","createEncryptor","createDecryptor","_minBufferSize","_mode","__creator","init","iv","words","_doProcessBlock","processBlock","_doFinalize","pad","_data","_process","unpad","Cipher"],"mappings":"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","sourceRoot":"/","sourcesContent":["var o;\r\nexports.BlockCipher = void 0;\r\nvar $cipher = require(\"./Cipher\");\r\nvar $cBC = require(\"./CBC\");\r\nvar $pKCS7 = require(\"./PKCS7\");\r\nvar l = (function (t) {\r\n    function e(e, i, o) {\r\n        return (\r\n            t.call(\r\n                this,\r\n                e,\r\n                i,\r\n                Object.assign(\r\n                    {\r\n                        blockSize: 4,\r\n                        mode: $cBC.CBC,\r\n                        padding: $pKCS7.PKCS7\r\n                    },\r\n                    o\r\n                )\r\n            ) || this\r\n        );\r\n    }\r\n    __extends(e, t);\r\n    e.prototype.reset = function () {\r\n        t.prototype.reset.call(this);\r\n        if (void 0 === this.cfg.mode) {\r\n            throw new Error(\"missing mode in config\");\r\n        }\r\n        var e;\r\n        this._xformMode === this.constructor._ENC_XFORM_MODE\r\n            ? (e = this.cfg.mode.createEncryptor)\r\n            : ((e = this.cfg.mode.createDecryptor), (this._minBufferSize = 1));\r\n        this._mode && this._mode.__creator === e\r\n            ? this._mode.init(this, this.cfg.iv && this.cfg.iv.words)\r\n            : ((this._mode = e.call(this.cfg.mode, this, this.cfg.iv && this.cfg.iv.words)),\r\n              (this._mode.__creator = e));\r\n    };\r\n    e.prototype._doProcessBlock = function (t, e) {\r\n        this._mode.processBlock(t, e);\r\n    };\r\n    e.prototype._doFinalize = function () {\r\n        if (void 0 === this.cfg.padding) {\r\n            throw new Error(\"missing padding in config\");\r\n        }\r\n        var t;\r\n        if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\r\n            if (void 0 === this.cfg.blockSize) {\r\n                throw new Error(\"missing blockSize in config\");\r\n            }\r\n            this.cfg.padding.pad(this._data, this.cfg.blockSize);\r\n            t = this._process(!0);\r\n        } else {\r\n            t = this._process(!0);\r\n            this.cfg.padding.unpad(t);\r\n        }\r\n        return t;\r\n    };\r\n    return e;\r\n})($cipher.Cipher);\r\nexports.BlockCipher = l;\r\n"]}