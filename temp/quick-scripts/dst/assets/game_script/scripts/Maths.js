
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/game_script/scripts/Maths.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '757b8ujSCFOZJeLAYSa5ZNn', 'Maths');
// game_script/scripts/Maths.js

"use strict";

exports.RVOMath = exports.Vector2 = exports.Line = void 0;

exports.Line = function () {};

var o = function () {
  function t(t, e) {
    if (void 0 === t) {
      t = 0;
    }

    if (void 0 === e) {
      e = 0;
    }

    this.x = t;
    this.y = e;
  }

  t.multiply = function (t, e) {
    return t.x * e.x + t.y * e.y;
  };

  t.multiply2 = function (e, i) {
    return new t(i.x * e, i.y * e);
  };

  t.division = function (e, i) {
    if (0 == i) {
      i = 1;
    }

    return new t(e.x / i, e.y / i);
  };

  t.subtract = function (e, i) {
    return new t(e.x - i.x, e.y - i.y);
  };

  t.addition = function (e, i) {
    return new t(e.x + i.x, e.y + i.y);
  };

  return t;
}();

exports.Vector2 = o;

var n = function () {
  function t() {}

  t.abs = function (t) {
    return this.sqrt(this.absSq(t));
  };

  t.absSq = function (t) {
    return o.multiply(t, t);
  };

  t.normalize = function (t) {
    return o.division(t, this.abs(t));
  };

  t.det = function (t, e) {
    return t.x * e.y - t.y * e.x;
  };

  t.distSqPointLineSegment = function (t, e, i) {
    var n = o.multiply(o.subtract(i, t), o.subtract(e, t)) / this.absSq(o.subtract(e, t));
    return n < 0 ? this.absSq(o.subtract(i, t)) : n > 1 ? this.absSq(o.subtract(i, e)) : this.absSq(o.subtract(i, o.addition(t, o.multiply2(n, o.subtract(e, t)))));
  };

  t.fabs = function (t) {
    return Math.abs(t);
  };

  t.leftOf = function (t, e, i) {
    return this.det(o.subtract(t, i), o.subtract(e, t));
  };

  t.sqr = function (t) {
    return t * t;
  };

  t.sqrt = function (t) {
    return Math.sqrt(t);
  };

  t.transfromFloat = function (t) {
    return Math.floor(10 * t) / 10;
  };

  t.RVO_EPSILON = 1e-5;
  t.RVO_POSITIVEINFINITY = 1e13;
  return t;
}();

exports.RVOMath = n;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZV9zY3JpcHRcXHNjcmlwdHNcXE1hdGhzLmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJSVk9NYXRoIiwiVmVjdG9yMiIsIkxpbmUiLCJvIiwidCIsImUiLCJ4IiwieSIsIm11bHRpcGx5IiwibXVsdGlwbHkyIiwiaSIsImRpdmlzaW9uIiwic3VidHJhY3QiLCJhZGRpdGlvbiIsIm4iLCJhYnMiLCJzcXJ0IiwiYWJzU3EiLCJub3JtYWxpemUiLCJkZXQiLCJkaXN0U3FQb2ludExpbmVTZWdtZW50IiwiZmFicyIsIk1hdGgiLCJsZWZ0T2YiLCJzcXIiLCJ0cmFuc2Zyb21GbG9hdCIsImZsb29yIiwiUlZPX0VQU0lMT04iLCJSVk9fUE9TSVRJVkVJTkZJTklUWSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQUEsT0FBTyxDQUFDQyxPQUFSLEdBQWtCRCxPQUFPLENBQUNFLE9BQVIsR0FBa0JGLE9BQU8sQ0FBQ0csSUFBUixHQUFlLEtBQUssQ0FBeEQ7O0FBQ0FILE9BQU8sQ0FBQ0csSUFBUixHQUFlLFlBQVksQ0FBRSxDQUE3Qjs7QUFDQSxJQUFJQyxDQUFDLEdBQUksWUFBWTtFQUNqQixTQUFTQyxDQUFULENBQVdBLENBQVgsRUFBY0MsQ0FBZCxFQUFpQjtJQUNiLElBQUksS0FBSyxDQUFMLEtBQVdELENBQWYsRUFBa0I7TUFDZEEsQ0FBQyxHQUFHLENBQUo7SUFDSDs7SUFDRCxJQUFJLEtBQUssQ0FBTCxLQUFXQyxDQUFmLEVBQWtCO01BQ2RBLENBQUMsR0FBRyxDQUFKO0lBQ0g7O0lBQ0QsS0FBS0MsQ0FBTCxHQUFTRixDQUFUO0lBQ0EsS0FBS0csQ0FBTCxHQUFTRixDQUFUO0VBQ0g7O0VBQ0RELENBQUMsQ0FBQ0ksUUFBRixHQUFhLFVBQVVKLENBQVYsRUFBYUMsQ0FBYixFQUFnQjtJQUN6QixPQUFPRCxDQUFDLENBQUNFLENBQUYsR0FBTUQsQ0FBQyxDQUFDQyxDQUFSLEdBQVlGLENBQUMsQ0FBQ0csQ0FBRixHQUFNRixDQUFDLENBQUNFLENBQTNCO0VBQ0gsQ0FGRDs7RUFHQUgsQ0FBQyxDQUFDSyxTQUFGLEdBQWMsVUFBVUosQ0FBVixFQUFhSyxDQUFiLEVBQWdCO0lBQzFCLE9BQU8sSUFBSU4sQ0FBSixDQUFNTSxDQUFDLENBQUNKLENBQUYsR0FBTUQsQ0FBWixFQUFlSyxDQUFDLENBQUNILENBQUYsR0FBTUYsQ0FBckIsQ0FBUDtFQUNILENBRkQ7O0VBR0FELENBQUMsQ0FBQ08sUUFBRixHQUFhLFVBQVVOLENBQVYsRUFBYUssQ0FBYixFQUFnQjtJQUN6QixJQUFJLEtBQUtBLENBQVQsRUFBWTtNQUNSQSxDQUFDLEdBQUcsQ0FBSjtJQUNIOztJQUNELE9BQU8sSUFBSU4sQ0FBSixDQUFNQyxDQUFDLENBQUNDLENBQUYsR0FBTUksQ0FBWixFQUFlTCxDQUFDLENBQUNFLENBQUYsR0FBTUcsQ0FBckIsQ0FBUDtFQUNILENBTEQ7O0VBTUFOLENBQUMsQ0FBQ1EsUUFBRixHQUFhLFVBQVVQLENBQVYsRUFBYUssQ0FBYixFQUFnQjtJQUN6QixPQUFPLElBQUlOLENBQUosQ0FBTUMsQ0FBQyxDQUFDQyxDQUFGLEdBQU1JLENBQUMsQ0FBQ0osQ0FBZCxFQUFpQkQsQ0FBQyxDQUFDRSxDQUFGLEdBQU1HLENBQUMsQ0FBQ0gsQ0FBekIsQ0FBUDtFQUNILENBRkQ7O0VBR0FILENBQUMsQ0FBQ1MsUUFBRixHQUFhLFVBQVVSLENBQVYsRUFBYUssQ0FBYixFQUFnQjtJQUN6QixPQUFPLElBQUlOLENBQUosQ0FBTUMsQ0FBQyxDQUFDQyxDQUFGLEdBQU1JLENBQUMsQ0FBQ0osQ0FBZCxFQUFpQkQsQ0FBQyxDQUFDRSxDQUFGLEdBQU1HLENBQUMsQ0FBQ0gsQ0FBekIsQ0FBUDtFQUNILENBRkQ7O0VBR0EsT0FBT0gsQ0FBUDtBQUNILENBOUJPLEVBQVI7O0FBK0JBTCxPQUFPLENBQUNFLE9BQVIsR0FBa0JFLENBQWxCOztBQUNBLElBQUlXLENBQUMsR0FBSSxZQUFZO0VBQ2pCLFNBQVNWLENBQVQsR0FBYSxDQUFFOztFQUNmQSxDQUFDLENBQUNXLEdBQUYsR0FBUSxVQUFVWCxDQUFWLEVBQWE7SUFDakIsT0FBTyxLQUFLWSxJQUFMLENBQVUsS0FBS0MsS0FBTCxDQUFXYixDQUFYLENBQVYsQ0FBUDtFQUNILENBRkQ7O0VBR0FBLENBQUMsQ0FBQ2EsS0FBRixHQUFVLFVBQVViLENBQVYsRUFBYTtJQUNuQixPQUFPRCxDQUFDLENBQUNLLFFBQUYsQ0FBV0osQ0FBWCxFQUFjQSxDQUFkLENBQVA7RUFDSCxDQUZEOztFQUdBQSxDQUFDLENBQUNjLFNBQUYsR0FBYyxVQUFVZCxDQUFWLEVBQWE7SUFDdkIsT0FBT0QsQ0FBQyxDQUFDUSxRQUFGLENBQVdQLENBQVgsRUFBYyxLQUFLVyxHQUFMLENBQVNYLENBQVQsQ0FBZCxDQUFQO0VBQ0gsQ0FGRDs7RUFHQUEsQ0FBQyxDQUFDZSxHQUFGLEdBQVEsVUFBVWYsQ0FBVixFQUFhQyxDQUFiLEVBQWdCO0lBQ3BCLE9BQU9ELENBQUMsQ0FBQ0UsQ0FBRixHQUFNRCxDQUFDLENBQUNFLENBQVIsR0FBWUgsQ0FBQyxDQUFDRyxDQUFGLEdBQU1GLENBQUMsQ0FBQ0MsQ0FBM0I7RUFDSCxDQUZEOztFQUdBRixDQUFDLENBQUNnQixzQkFBRixHQUEyQixVQUFVaEIsQ0FBVixFQUFhQyxDQUFiLEVBQWdCSyxDQUFoQixFQUFtQjtJQUMxQyxJQUFJSSxDQUFDLEdBQUdYLENBQUMsQ0FBQ0ssUUFBRixDQUFXTCxDQUFDLENBQUNTLFFBQUYsQ0FBV0YsQ0FBWCxFQUFjTixDQUFkLENBQVgsRUFBNkJELENBQUMsQ0FBQ1MsUUFBRixDQUFXUCxDQUFYLEVBQWNELENBQWQsQ0FBN0IsSUFBaUQsS0FBS2EsS0FBTCxDQUFXZCxDQUFDLENBQUNTLFFBQUYsQ0FBV1AsQ0FBWCxFQUFjRCxDQUFkLENBQVgsQ0FBekQ7SUFDQSxPQUFPVSxDQUFDLEdBQUcsQ0FBSixHQUNELEtBQUtHLEtBQUwsQ0FBV2QsQ0FBQyxDQUFDUyxRQUFGLENBQVdGLENBQVgsRUFBY04sQ0FBZCxDQUFYLENBREMsR0FFRFUsQ0FBQyxHQUFHLENBQUosR0FDQSxLQUFLRyxLQUFMLENBQVdkLENBQUMsQ0FBQ1MsUUFBRixDQUFXRixDQUFYLEVBQWNMLENBQWQsQ0FBWCxDQURBLEdBRUEsS0FBS1ksS0FBTCxDQUFXZCxDQUFDLENBQUNTLFFBQUYsQ0FBV0YsQ0FBWCxFQUFjUCxDQUFDLENBQUNVLFFBQUYsQ0FBV1QsQ0FBWCxFQUFjRCxDQUFDLENBQUNNLFNBQUYsQ0FBWUssQ0FBWixFQUFlWCxDQUFDLENBQUNTLFFBQUYsQ0FBV1AsQ0FBWCxFQUFjRCxDQUFkLENBQWYsQ0FBZCxDQUFkLENBQVgsQ0FKTjtFQUtILENBUEQ7O0VBUUFBLENBQUMsQ0FBQ2lCLElBQUYsR0FBUyxVQUFVakIsQ0FBVixFQUFhO0lBQ2xCLE9BQU9rQixJQUFJLENBQUNQLEdBQUwsQ0FBU1gsQ0FBVCxDQUFQO0VBQ0gsQ0FGRDs7RUFHQUEsQ0FBQyxDQUFDbUIsTUFBRixHQUFXLFVBQVVuQixDQUFWLEVBQWFDLENBQWIsRUFBZ0JLLENBQWhCLEVBQW1CO0lBQzFCLE9BQU8sS0FBS1MsR0FBTCxDQUFTaEIsQ0FBQyxDQUFDUyxRQUFGLENBQVdSLENBQVgsRUFBY00sQ0FBZCxDQUFULEVBQTJCUCxDQUFDLENBQUNTLFFBQUYsQ0FBV1AsQ0FBWCxFQUFjRCxDQUFkLENBQTNCLENBQVA7RUFDSCxDQUZEOztFQUdBQSxDQUFDLENBQUNvQixHQUFGLEdBQVEsVUFBVXBCLENBQVYsRUFBYTtJQUNqQixPQUFPQSxDQUFDLEdBQUdBLENBQVg7RUFDSCxDQUZEOztFQUdBQSxDQUFDLENBQUNZLElBQUYsR0FBUyxVQUFVWixDQUFWLEVBQWE7SUFDbEIsT0FBT2tCLElBQUksQ0FBQ04sSUFBTCxDQUFVWixDQUFWLENBQVA7RUFDSCxDQUZEOztFQUdBQSxDQUFDLENBQUNxQixjQUFGLEdBQW1CLFVBQVVyQixDQUFWLEVBQWE7SUFDNUIsT0FBT2tCLElBQUksQ0FBQ0ksS0FBTCxDQUFXLEtBQUt0QixDQUFoQixJQUFxQixFQUE1QjtFQUNILENBRkQ7O0VBR0FBLENBQUMsQ0FBQ3VCLFdBQUYsR0FBZ0IsSUFBaEI7RUFDQXZCLENBQUMsQ0FBQ3dCLG9CQUFGLEdBQXlCLElBQXpCO0VBQ0EsT0FBT3hCLENBQVA7QUFDSCxDQXhDTyxFQUFSOztBQXlDQUwsT0FBTyxDQUFDQyxPQUFSLEdBQWtCYyxDQUFsQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5SVk9NYXRoID0gZXhwb3J0cy5WZWN0b3IyID0gZXhwb3J0cy5MaW5lID0gdm9pZCAwO1xyXG5leHBvcnRzLkxpbmUgPSBmdW5jdGlvbiAoKSB7fTtcclxudmFyIG8gPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gdCh0LCBlKSB7XHJcbiAgICAgICAgaWYgKHZvaWQgMCA9PT0gdCkge1xyXG4gICAgICAgICAgICB0ID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHZvaWQgMCA9PT0gZSkge1xyXG4gICAgICAgICAgICBlID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy54ID0gdDtcclxuICAgICAgICB0aGlzLnkgPSBlO1xyXG4gICAgfVxyXG4gICAgdC5tdWx0aXBseSA9IGZ1bmN0aW9uICh0LCBlKSB7XHJcbiAgICAgICAgcmV0dXJuIHQueCAqIGUueCArIHQueSAqIGUueTtcclxuICAgIH07XHJcbiAgICB0Lm11bHRpcGx5MiA9IGZ1bmN0aW9uIChlLCBpKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyB0KGkueCAqIGUsIGkueSAqIGUpO1xyXG4gICAgfTtcclxuICAgIHQuZGl2aXNpb24gPSBmdW5jdGlvbiAoZSwgaSkge1xyXG4gICAgICAgIGlmICgwID09IGkpIHtcclxuICAgICAgICAgICAgaSA9IDE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBuZXcgdChlLnggLyBpLCBlLnkgLyBpKTtcclxuICAgIH07XHJcbiAgICB0LnN1YnRyYWN0ID0gZnVuY3Rpb24gKGUsIGkpIHtcclxuICAgICAgICByZXR1cm4gbmV3IHQoZS54IC0gaS54LCBlLnkgLSBpLnkpO1xyXG4gICAgfTtcclxuICAgIHQuYWRkaXRpb24gPSBmdW5jdGlvbiAoZSwgaSkge1xyXG4gICAgICAgIHJldHVybiBuZXcgdChlLnggKyBpLngsIGUueSArIGkueSk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIHQ7XHJcbn0pKCk7XHJcbmV4cG9ydHMuVmVjdG9yMiA9IG87XHJcbnZhciBuID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIHQoKSB7fVxyXG4gICAgdC5hYnMgPSBmdW5jdGlvbiAodCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnNxcnQodGhpcy5hYnNTcSh0KSk7XHJcbiAgICB9O1xyXG4gICAgdC5hYnNTcSA9IGZ1bmN0aW9uICh0KSB7XHJcbiAgICAgICAgcmV0dXJuIG8ubXVsdGlwbHkodCwgdCk7XHJcbiAgICB9O1xyXG4gICAgdC5ub3JtYWxpemUgPSBmdW5jdGlvbiAodCkge1xyXG4gICAgICAgIHJldHVybiBvLmRpdmlzaW9uKHQsIHRoaXMuYWJzKHQpKTtcclxuICAgIH07XHJcbiAgICB0LmRldCA9IGZ1bmN0aW9uICh0LCBlKSB7XHJcbiAgICAgICAgcmV0dXJuIHQueCAqIGUueSAtIHQueSAqIGUueDtcclxuICAgIH07XHJcbiAgICB0LmRpc3RTcVBvaW50TGluZVNlZ21lbnQgPSBmdW5jdGlvbiAodCwgZSwgaSkge1xyXG4gICAgICAgIHZhciBuID0gby5tdWx0aXBseShvLnN1YnRyYWN0KGksIHQpLCBvLnN1YnRyYWN0KGUsIHQpKSAvIHRoaXMuYWJzU3Eoby5zdWJ0cmFjdChlLCB0KSk7XHJcbiAgICAgICAgcmV0dXJuIG4gPCAwXHJcbiAgICAgICAgICAgID8gdGhpcy5hYnNTcShvLnN1YnRyYWN0KGksIHQpKVxyXG4gICAgICAgICAgICA6IG4gPiAxXHJcbiAgICAgICAgICAgID8gdGhpcy5hYnNTcShvLnN1YnRyYWN0KGksIGUpKVxyXG4gICAgICAgICAgICA6IHRoaXMuYWJzU3Eoby5zdWJ0cmFjdChpLCBvLmFkZGl0aW9uKHQsIG8ubXVsdGlwbHkyKG4sIG8uc3VidHJhY3QoZSwgdCkpKSkpO1xyXG4gICAgfTtcclxuICAgIHQuZmFicyA9IGZ1bmN0aW9uICh0KSB7XHJcbiAgICAgICAgcmV0dXJuIE1hdGguYWJzKHQpO1xyXG4gICAgfTtcclxuICAgIHQubGVmdE9mID0gZnVuY3Rpb24gKHQsIGUsIGkpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5kZXQoby5zdWJ0cmFjdCh0LCBpKSwgby5zdWJ0cmFjdChlLCB0KSk7XHJcbiAgICB9O1xyXG4gICAgdC5zcXIgPSBmdW5jdGlvbiAodCkge1xyXG4gICAgICAgIHJldHVybiB0ICogdDtcclxuICAgIH07XHJcbiAgICB0LnNxcnQgPSBmdW5jdGlvbiAodCkge1xyXG4gICAgICAgIHJldHVybiBNYXRoLnNxcnQodCk7XHJcbiAgICB9O1xyXG4gICAgdC50cmFuc2Zyb21GbG9hdCA9IGZ1bmN0aW9uICh0KSB7XHJcbiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoMTAgKiB0KSAvIDEwO1xyXG4gICAgfTtcclxuICAgIHQuUlZPX0VQU0lMT04gPSAxZS01O1xyXG4gICAgdC5SVk9fUE9TSVRJVkVJTkZJTklUWSA9IDFlMTM7XHJcbiAgICByZXR1cm4gdDtcclxufSkoKTtcclxuZXhwb3J0cy5SVk9NYXRoID0gbjtcclxuIl19