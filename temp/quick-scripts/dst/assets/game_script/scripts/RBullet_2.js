
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/game_script/scripts/RBullet_2.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f2e57gsAkREH7ly8pt6Mwlx', 'RBullet_2');
// game_script/scripts/RBullet_2.js

"use strict";

var o;

var $object = require("./Object");

var $util = require("./Util");

var $gameContext = require("./GameContext");

var $baseBullet = require("./BaseBullet");

var u = cc._decorator;
var d = u.ccclass;
var p = (u.property, function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.buttleType = $baseBullet.BulletType.r_bullet_2;
    e.atkAnim = null;
    e.bulletSpeed = 800;
    e.time = 0;
    e.targetNode = null;
    e.targetPos = null;
    e.initPos = null;
    e.status = 0;
    e.attackedEnemy = new Set();
    e.dir = null;
    return e;
  }

  __extends(e, t);

  e.prototype.initRBullet = function (e, i, o, n, s) {
    var r = this;
    this.initPos = this.node.position.clone();
    this.targetNode = e;
    this.targetPos = this.targetNode.getPosition().clone();
    this.time = s;
    t.prototype.initButtle.call(this, null, null);
    this.bulletSpeed = n;
    this.atkAnim = this.node.getComponentInChildren(cc.Animation);
    this.atk = i;
    this.setScale(cc.v3(o, o));
    this.status = 0;
    var a = this.node.position.sub(cc.v3(this.targetPos.x, -410)).mag() / this.bulletSpeed;
    cc.tween(this.node).to(a, {
      position: cc.v3(this.targetPos.x, -410)
    }).call(function () {
      r.status = 2;
    }).start();
  };

  e.prototype.onTrigger = function (t, e) {
    if (!this.isUse && e == $object.Trigger.stay) {
      var i = t.object;

      if (!this.attackedEnemy.has(i)) {
        this.attackedEnemy.add(i);
        i.sufferAtk({
          skillSpecialitys: this.skillSpecialitys,
          atk: this.atk
        });
      }
    }
  };

  e.prototype.updateFrame = function (e) {
    var i = this;
    t.prototype.updateFrame.call(this, e);

    if (this.time > 0) {
      this.time -= e;

      if (this.time <= 0 && 2 === this.status) {
        this.dir = this.initPos.sub(this.node.position).normalize();
        this.velocity.set(this.dir.normalize()).multiplyScalar(this.speed);
        this.status = 4;
      }
    }

    if (2 === this.status) {
      if (!(this.targetNode && $util["default"].isValid(this.targetNode.node) || (this.targetNode = $gameContext["default"].ins.getRangeRandomEnemyLayerByPos(this.targetPos, 900), this.targetNode))) {
        return void (this.status = 4);
      }

      this.targetPos.x = this.targetNode.node.x;
      this.targetPos.y = this.targetNode.node.y;

      if (0 === this.speed) {
        this.speed = this.bulletSpeed;
      }

      this.dir = this.targetPos.sub(this.node.position);
      this.dir.magSqr() <= 1e4 ? (this.velocity = cc.Vec3.ZERO, this.status = 3, this.trigger = !0, this.atkAnim.node.active = !0, this.atkAnim.play("rbullet_2"), this.atkAnim.once(cc.Animation.EventType.FINISHED, function () {
        i.atkAnim.node.active = !1;
        i.trigger = !1;
        i.dir = i.initPos.sub(i.node.position).normalize();
        i.velocity.set(i.dir.normalize()).multiplyScalar(i.speed);
        i.status = 4;
      }, this)) : this.velocity.set(this.dir.normalize()).multiplyScalar(this.speed);
    }

    if (4 === this.status && this.initPos.sub(this.getPosition()).magSqr() <= 2500) {
      this.status = 5;
      this.attackedEnemy.clear();
      this.removeSelf();
    }
  };

  return __decorate([d], e);
}($baseBullet["default"]));
exports["default"] = p;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,