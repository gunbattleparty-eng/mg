
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/game_script/scripts/ShopResLIstItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '35a53xKNR1JmI9jiH+tR+Gh', 'ShopResLIstItem');
// game_script/scripts/ShopResLIstItem.js

"use strict";

var o;

var $assetsLoader = require("./AssetsLoader");

var $assetsMap = require("./AssetsMap");

var $resUtil = require("./ResUtil");

var $eventManager = require("./EventManager");

var $popupManager = require("./PopupManager");

var $platform = require("./Platform");

var $remoteAudio = require("./RemoteAudio");

var $seedUtil = require("./SeedUtil");

var $util = require("./Util");

var $aD = require("./AD");

var $adService = require("./AdService");

var $localEventName = require("./LocalEventName");

var $roleContext = require("./RoleContext");

var $shopContext = require("./ShopContext");

var $skillContext = require("./SkillContext");

var $userDataContext = require("./UserDataContext");

var $coinDiamondView = require("./CoinDiamondView");

var $startView = require("./StartView");

var S = cc._decorator;
var C = S.ccclass;
var I = S.property;

var P = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.icon = null;
    e.titleLable = null;
    e.limitLabel = null;
    e.numLabel = null;
    e.btnBuy = null;
    e.coinLable = null;
    e.adLimitLable = null;
    e.config = null;
    e.buyType = 0;
    return e;
  }

  __extends(e, t);

  e.prototype.start = function () {
    this.btnBuy.on("click", this.clickBuy, this);
  };

  e.prototype.init = function (t) {
    var e = this;
    this.config = t;
    $assetsLoader["default"].instance.loadRes($assetsMap.BundleNames.Start, ["/textures/shop/icon_" + t.type], cc.SpriteFrame, null, function (t, i) {
      var o = i[0];

      if (o && cc.isValid(e.icon)) {
        e.icon.spriteFrame = $resUtil.ResUtil.assignWith(o, e.node);
      }
    });
    this.render();
  };

  e.prototype.render = function () {
    this.titleLable.string = this.config.name;
    var t = $shopContext["default"].Ins.getShopResRecordById(this.config.id);
    this.limitLabel.string = "每日限购" + t.buyCount + "/" + this.config.buy_num;
    this.limitLabel.node.active = -1 !== this.config.buy_num;
    $util["default"].updateMaterialState(this.btnBuy, t.buyCount >= this.config.buy_num);
    this.btnBuy.getComponent(cc.Button).interactable = t.buyCount < this.config.buy_num;
    this.coinLable.string = "" + this.config.coin_num;
    this.numLabel.string = "X" + this.config.reward_num;
    this.coinLable.node.parent.children[0].active = !0;
    this.coinLable.node.parent.children[1].active = !1;
    this.adLimitLable.node.active = !1;
    this.buyType = 0;
    this.btnBuy.children[1].active = !1;
    2 === this.config.coin_type ? (this.coinLable.node.parent.children[0].active = !1, this.coinLable.string = "免费", this.btnBuy.children[1].active = !0, this.buyType = 2, t.buyCount > 0 && (this.coinLable.string = "免费", this.btnBuy.children[1].active = !1, this.buyType = 1, this.coinLable.node.parent.children[1].active = !0)) : 3 === this.config.coin_type ? (this.coinLable.string = "免费", this.coinLable.node.parent.children[0].active = !1, this.coinLable.node.parent.children[1].active = !0, this.buyType = 1, this.config.coin_num > 1 && (this.adLimitLable.node.active = !0, this.adLimitLable.string = "(" + t.video_count + "/" + this.config.coin_num + ")")) : 4 === this.config.coin_type && (this.coinLable.node.parent.children[0].active = !1, this.coinLable.string = "免费", this.buyType = 2);
  };

  e.prototype.clickBuy = function () {
    var t = this;
    $remoteAudio["default"].instance.playEffectMusic("Click");
    var e = $shopContext["default"].Ins.getShopResRecordById(this.config.id);

    if (!(0 !== this.config.buy_num && e.buyCount >= this.config.buy_num)) {
      0 !== this.buyType || $userDataContext["default"].Ins.opearDiamond(-this.config.coin_num) ? 1 !== this.buyType ? (this.buy(), $eventManager["default"].send($localEventName["default"].RENDER_DOT, $startView.MenuType.Shop)) : $adService["default"].Ins.showRewardedVideo(function () {
        if ($platform.Platform.currPlatForm === $platform.PlatformEnum.TOU_TIAO) {
          if (4 === t.config.type) {
            $aD["default"].toutiao.report("Free_Coins");
          }

          if (7 === t.config.type) {
            $aD["default"].toutiao.report("Dog_Skin");
          }

          8 === t.config.type ? $aD["default"].toutiao.report("plane_skin") : 9 === t.config.type && $aD["default"].toutiao.report("adfree");
        }

        if (3 === t.config.coin_type) {
          var e = $shopContext["default"].Ins.getShopResRecordById(t.config.id);
          e.video_count++;
          e.video_count >= t.config.coin_num ? (e.video_count = 0, t.buy()) : ($shopContext["default"].Ins.addShopResRecordVideo(e.id, e.video_count), t.render());
        } else {
          t.buy();
        }
      }) : $popupManager.PopupManager.instance.open($assetsMap.AssetsMap.PopUpBundles.prefabs.assetsList.CoinDiamondView, {
        type: $coinDiamondView.AstType.DIAMON
      });
    }
  };

  e.prototype.buy = function () {
    var t = this;

    if (10 !== this.config.type) {
      $shopContext["default"].Ins.addShopResRecord(this.config.id);
    }

    var e = [];

    if (1 === this.config.type) {
      var i = $seedUtil["default"].randomCount(1, 6, $seedUtil["default"].randomFrom(1, 4));
      var o = $seedUtil["default"].splitNumber(this.config.reward_num, i.length);
      console.log(i, o);

      for (var n = 0; n < o.length; n++) {
        var s = o[n];
        $userDataContext["default"].Ins.opearEquipBook(i[n], s);
        e.push({
          type: 3,
          ext: i[n],
          num: s
        });
      }

      $eventManager["default"].send($localEventName["default"].RENDER_DOT, $startView.MenuType.Role);
    } else {
      if (2 === this.config.type) {
        var r = $seedUtil["default"].randomFrom(1, 4);
        var l = $skillContext["default"].Ins.getUseSkillIds();
        r = Math.min(l.length, r);
        l = $seedUtil["default"].randomArr(l, r);
        var d = $seedUtil["default"].splitNumber(this.config.reward_num, r);

        for (n = 0; n < r; n++) {
          $userDataContext["default"].Ins.opearSkillBook(l[n], d[n]);
          e.push({
            type: 4,
            ext: l[n],
            num: d[n]
          });
        }

        $eventManager["default"].send($localEventName["default"].RENDER_DOT, $startView.MenuType.Skill);
      } else {
        if (3 === this.config.type) {
          $userDataContext["default"].Ins.opearUpgradeStone(this.config.reward_num);
          e.push({
            type: 7,
            num: this.config.reward_num
          });
          $eventManager["default"].send($localEventName["default"].RENDER_DOT, $startView.MenuType.Role);
        } else {
          if (4 === this.config.type) {
            $userDataContext["default"].Ins.opearCoin(this.config.reward_num);
            e.push({
              type: 1,
              num: this.config.reward_num
            });
            $eventManager["default"].send($localEventName["default"].RENDER_DOT, $startView.MenuType.ALL);
          } else {
            if (5 === this.config.type) {
              $userDataContext["default"].Ins.opearPower(this.config.reward_num);
              e.push({
                type: 8,
                num: this.config.reward_num
              });
            } else {
              if (7 === this.config.type) {
                (p = $roleContext["default"].ins.getRobotSkinInfo(2)).shard += 1;
                $roleContext["default"].ins.setRobotSkinInfo(p);
                e.push({
                  type: 11,
                  num: this.config.reward_num,
                  ext: 2
                });
              } else {
                if (8 === this.config.type) {
                  var p;
                  (p = $roleContext["default"].ins.getRobotSkinInfo(3)).shard += 1;
                  $roleContext["default"].ins.setRobotSkinInfo(p);
                  e.push({
                    type: 11,
                    num: this.config.reward_num,
                    ext: 3
                  });
                } else {
                  if (9 === this.config.type) {
                    $userDataContext["default"].Ins.opearAdCoin(this.config.reward_num);
                    e.push({
                      type: 12,
                      num: this.config.reward_num
                    });
                  } else {
                    if (10 === this.config.type) {
                      return void $popupManager.PopupManager.instance.open($assetsMap.AssetsMap.PopUpBundles.prefabs.assetsList.AdCoinView, null, {
                        closeCallback: function closeCallback() {
                          t.render();
                        }
                      });
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    $popupManager.PopupManager.instance.open($assetsMap.AssetsMap.PopUpBundles.prefabs.assetsList.RewardView, {
      infos: e
    });
    this.render();
  };

  __decorate([I(cc.Sprite)], e.prototype, "icon", void 0);

  __decorate([I(cc.Label)], e.prototype, "titleLable", void 0);

  __decorate([I(cc.Label)], e.prototype, "limitLabel", void 0);

  __decorate([I(cc.Label)], e.prototype, "numLabel", void 0);

  __decorate([I(cc.Node)], e.prototype, "btnBuy", void 0);

  __decorate([I(cc.Label)], e.prototype, "coinLable", void 0);

  __decorate([I(cc.Label)], e.prototype, "adLimitLable", void 0);

  return __decorate([C], e);
}(cc.Component);

exports["default"] = P;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZV9zY3JpcHRcXHNjcmlwdHNcXFNob3BSZXNMSXN0SXRlbS5qcyJdLCJuYW1lcyI6WyJvIiwiJGFzc2V0c0xvYWRlciIsInJlcXVpcmUiLCIkYXNzZXRzTWFwIiwiJHJlc1V0aWwiLCIkZXZlbnRNYW5hZ2VyIiwiJHBvcHVwTWFuYWdlciIsIiRwbGF0Zm9ybSIsIiRyZW1vdGVBdWRpbyIsIiRzZWVkVXRpbCIsIiR1dGlsIiwiJGFEIiwiJGFkU2VydmljZSIsIiRsb2NhbEV2ZW50TmFtZSIsIiRyb2xlQ29udGV4dCIsIiRzaG9wQ29udGV4dCIsIiRza2lsbENvbnRleHQiLCIkdXNlckRhdGFDb250ZXh0IiwiJGNvaW5EaWFtb25kVmlldyIsIiRzdGFydFZpZXciLCJTIiwiY2MiLCJfZGVjb3JhdG9yIiwiQyIsImNjY2xhc3MiLCJJIiwicHJvcGVydHkiLCJQIiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsImljb24iLCJ0aXRsZUxhYmxlIiwibGltaXRMYWJlbCIsIm51bUxhYmVsIiwiYnRuQnV5IiwiY29pbkxhYmxlIiwiYWRMaW1pdExhYmxlIiwiY29uZmlnIiwiYnV5VHlwZSIsIl9fZXh0ZW5kcyIsInByb3RvdHlwZSIsInN0YXJ0Iiwib24iLCJjbGlja0J1eSIsImluaXQiLCJpbnN0YW5jZSIsImxvYWRSZXMiLCJCdW5kbGVOYW1lcyIsIlN0YXJ0IiwidHlwZSIsIlNwcml0ZUZyYW1lIiwiaSIsImlzVmFsaWQiLCJzcHJpdGVGcmFtZSIsIlJlc1V0aWwiLCJhc3NpZ25XaXRoIiwibm9kZSIsInJlbmRlciIsInN0cmluZyIsIm5hbWUiLCJJbnMiLCJnZXRTaG9wUmVzUmVjb3JkQnlJZCIsImlkIiwiYnV5Q291bnQiLCJidXlfbnVtIiwiYWN0aXZlIiwidXBkYXRlTWF0ZXJpYWxTdGF0ZSIsImdldENvbXBvbmVudCIsIkJ1dHRvbiIsImludGVyYWN0YWJsZSIsImNvaW5fbnVtIiwicmV3YXJkX251bSIsInBhcmVudCIsImNoaWxkcmVuIiwiY29pbl90eXBlIiwidmlkZW9fY291bnQiLCJwbGF5RWZmZWN0TXVzaWMiLCJvcGVhckRpYW1vbmQiLCJidXkiLCJzZW5kIiwiUkVOREVSX0RPVCIsIk1lbnVUeXBlIiwiU2hvcCIsInNob3dSZXdhcmRlZFZpZGVvIiwiUGxhdGZvcm0iLCJjdXJyUGxhdEZvcm0iLCJQbGF0Zm9ybUVudW0iLCJUT1VfVElBTyIsInRvdXRpYW8iLCJyZXBvcnQiLCJhZGRTaG9wUmVzUmVjb3JkVmlkZW8iLCJQb3B1cE1hbmFnZXIiLCJvcGVuIiwiQXNzZXRzTWFwIiwiUG9wVXBCdW5kbGVzIiwicHJlZmFicyIsImFzc2V0c0xpc3QiLCJDb2luRGlhbW9uZFZpZXciLCJBc3RUeXBlIiwiRElBTU9OIiwiYWRkU2hvcFJlc1JlY29yZCIsInJhbmRvbUNvdW50IiwicmFuZG9tRnJvbSIsInNwbGl0TnVtYmVyIiwibGVuZ3RoIiwiY29uc29sZSIsImxvZyIsIm4iLCJzIiwib3BlYXJFcXVpcEJvb2siLCJwdXNoIiwiZXh0IiwibnVtIiwiUm9sZSIsInIiLCJsIiwiZ2V0VXNlU2tpbGxJZHMiLCJNYXRoIiwibWluIiwicmFuZG9tQXJyIiwiZCIsIm9wZWFyU2tpbGxCb29rIiwiU2tpbGwiLCJvcGVhclVwZ3JhZGVTdG9uZSIsIm9wZWFyQ29pbiIsIkFMTCIsIm9wZWFyUG93ZXIiLCJwIiwiaW5zIiwiZ2V0Um9ib3RTa2luSW5mbyIsInNoYXJkIiwic2V0Um9ib3RTa2luSW5mbyIsIm9wZWFyQWRDb2luIiwiQWRDb2luVmlldyIsImNsb3NlQ2FsbGJhY2siLCJSZXdhcmRWaWV3IiwiaW5mb3MiLCJfX2RlY29yYXRlIiwiU3ByaXRlIiwiTGFiZWwiLCJOb2RlIiwiQ29tcG9uZW50IiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxDQUFKOztBQUNBLElBQUlDLGFBQWEsR0FBR0MsT0FBTyxDQUFDLGdCQUFELENBQTNCOztBQUNBLElBQUlDLFVBQVUsR0FBR0QsT0FBTyxDQUFD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ZXF1aXJlKFwiLi9Bc3NldHNMb2FkZXJcIik7XHJcbnZhciAkYXNzZXRzTWFwID0gcmVxdWlyZShcIi4vQXNzZXRzTWFwXCIpO1xyXG52YXIgJHJlc1V0aWwgPSByZXF1aXJlKFwiLi9SZXNVdGlsXCIpO1xyXG52YXIgJGV2ZW50TWFuYWdlciA9IHJlcXVpcmUoXCIuL0V2ZW50TWFuYWdlclwiKTtcclxudmFyICRwb3B1cE1hbmFnZXIgPSByZXF1aXJlKFwiLi9Qb3B1cE1hbmFnZXJcIik7XHJcbnZhciAkcGxhdGZvcm0gPSByZXF1aXJlKFwiLi9QbGF0Zm9ybVwiKTtcclxudmFyICRyZW1vdGVBdWRpbyA9IHJlcXVpcmUoXCIuL1JlbW90ZUF1ZGlvXCIpO1xyXG52YXIgJHNlZWRVdGlsID0gcmVxdWlyZShcIi4vU2VlZFV0aWxcIik7XHJcbnZhciAkdXRpbCA9IHJlcXVpcmUoXCIuL1V0aWxcIik7XHJcbnZhciAkYUQgPSByZXF1aXJlKFwiLi9BRFwiKTtcclxudmFyICRhZFNlcnZpY2UgPSByZXF1aXJlKFwiLi9BZFNlcnZpY2VcIik7XHJcbnZhciAkbG9jYWxFdmVudE5hbWUgPSByZXF1aXJlKFwiLi9Mb2NhbEV2ZW50TmFtZVwiKTtcclxudmFyICRyb2xlQ29udGV4dCA9IHJlcXVpcmUoXCIuL1JvbGVDb250ZXh0XCIpO1xyXG52YXIgJHNob3BDb250ZXh0ID0gcmVxdWlyZShcIi4vU2hvcENvbnRleHRcIik7XHJcbnZhciAkc2tpbGxDb250ZXh0ID0gcmVxdWlyZShcIi4vU2tpbGxDb250ZXh0XCIpO1xyXG52YXIgJHVzZXJEYXRhQ29udGV4dCA9IHJlcXVpcmUoXCIuL1VzZXJEYXRhQ29udGV4dFwiKTtcclxudmFyICRjb2luRGlhbW9uZFZpZXcgPSByZXF1aXJlKFwiLi9Db2luRGlhbW9uZFZpZXdcIik7XHJcbnZhciAkc3RhcnRWaWV3ID0gcmVxdWlyZShcIi4vU3RhcnRWaWV3XCIpO1xyXG52YXIgUyA9IGNjLl9kZWNvcmF0b3I7XHJcbnZhciBDID0gUy5jY2NsYXNzO1xyXG52YXIgSSA9IFMucHJvcGVydHk7XHJcbnZhciBQID0gKGZ1bmN0aW9uICh0KSB7XHJcbiAgICBmdW5jdGlvbiBlKCkge1xyXG4gICAgICAgIHZhciBlID0gKG51bGwgIT09IHQgJiYgdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB8fCB0aGlzO1xyXG4gICAgICAgIGUuaWNvbiA9IG51bGw7XHJcbiAgICAgICAgZS50aXRsZUxhYmxlID0gbnVsbDtcclxuICAgICAgICBlLmxpbWl0TGFiZWwgPSBudWxsO1xyXG4gICAgICAgIGUubnVtTGFiZWwgPSBudWxsO1xyXG4gICAgICAgIGUuYnRuQnV5ID0gbnVsbDtcclxuICAgICAgICBlLmNvaW5MYWJsZSA9IG51bGw7XHJcbiAgICAgICAgZS5hZExpbWl0TGFibGUgPSBudWxsO1xyXG4gICAgICAgIGUuY29uZmlnID0gbnVsbDtcclxuICAgICAgICBlLmJ1eVR5cGUgPSAwO1xyXG4gICAgICAgIHJldHVybiBlO1xyXG4gICAgfVxyXG4gICAgX19leHRlbmRzKGUsIHQpO1xyXG4gICAgZS5wcm90b3R5cGUuc3RhcnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5idG5CdXkub24oXCJjbGlja1wiLCB0aGlzLmNsaWNrQnV5LCB0aGlzKTtcclxuICAgIH07XHJcbiAgICBlLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKHQpIHtcclxuICAgICAgICB2YXIgZSA9IHRoaXM7XHJcbiAgICAgICAgdGhpcy5jb25maWcgPSB0O1xyXG4gICAgICAgICRhc3NldHNMb2FkZXIuZGVmYXVsdC5pbnN0YW5jZS5sb2FkUmVzKFxyXG4gICAgICAgICAgICAkYXNzZXRzTWFwLkJ1bmRsZU5hbWVzLlN0YXJ0LFxyXG4gICAgICAgICAgICBbXCIvdGV4dHVyZXMvc2hvcC9pY29uX1wiICsgdC50eXBlXSxcclxuICAgICAgICAgICAgY2MuU3ByaXRlRnJhbWUsXHJcbiAgICAgICAgICAgIG51bGwsXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uICh0LCBpKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgbyA9IGlbMF07XHJcbiAgICAgICAgICAgICAgICBpZiAobyAmJiBjYy5pc1ZhbGlkKGUuaWNvbikpIHtcclxuICAgICAgICAgICAgICAgICAgICBlLmljb24uc3ByaXRlRnJhbWUgPSAkcmVzVXRpbC5SZXNVdGlsLmFzc2lnbldpdGgobywgZS5ub2RlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICk7XHJcbiAgICAgICAgdGhpcy5yZW5kZXIoKTtcclxuICAgIH07XHJcbiAgICBlLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy50aXRsZUxhYmxlLnN0cmluZyA9IHRoaXMuY29uZmlnLm5hbWU7XHJcbiAgICAgICAgdmFyIHQgPSAkc2hvcENvbnRleHQuZGVmYXVsdC5JbnMuZ2V0U2hvcFJlc1JlY29yZEJ5SWQodGhpcy5jb25maWcuaWQpO1xyXG4gICAgICAgIHRoaXMubGltaXRMYWJlbC5zdHJpbmcgPSBcIuavj+aXpemZkOi0rVwiICsgdC5idXlDb3VudCArIFwiL1wiICsgdGhpcy5jb25maWcuYnV5X251bTtcclxuICAgICAgICB0aGlzLmxpbWl0TGFiZWwubm9kZS5hY3RpdmUgPSAtMSAhPT0gdGhpcy5jb25maWcuYnV5X251bTtcclxuICAgICAgICAkdXRpbC5kZWZhdWx0LnVwZGF0ZU1hdGVyaWFsU3RhdGUodGhpcy5idG5CdXksIHQuYnV5Q291bnQgPj0gdGhpcy5jb25maWcuYnV5X251bSk7XHJcbiAgICAgICAgdGhpcy5idG5CdXkuZ2V0Q29tcG9uZW50KGNjLkJ1dHRvbikuaW50ZXJhY3RhYmxlID0gdC5idXlDb3VudCA8IHRoaXMuY29uZmlnLmJ1eV9udW07XHJcbiAgICAgICAgdGhpcy5jb2luTGFibGUuc3RyaW5nID0gXCJcIiArIHRoaXMuY29uZmlnLmNvaW5fbnVtO1xyXG4gICAgICAgIHRoaXMubnVtTGFiZWwuc3RyaW5nID0gXCJYXCIgKyB0aGlzLmNvbmZpZy5yZXdhcmRfbnVtO1xyXG4gICAgICAgIHRoaXMuY29pbkxhYmxlLm5vZGUucGFyZW50LmNoaWxkcmVuWzBdLmFjdGl2ZSA9ICEwO1xyXG4gICAgICAgIHRoaXMuY29pbkxhYmxlLm5vZGUucGFyZW50LmNoaWxkcmVuWzFdLmFjdGl2ZSA9ICExO1xyXG4gICAgICAgIHRoaXMuYWRMaW1pdExhYmxlLm5vZGUuYWN0aXZlID0gITE7XHJcbiAgICAgICAgdGhpcy5idXlUeXBlID0gMDtcclxuICAgICAgICB0aGlzLmJ0bkJ1eS5jaGlsZHJlblsxXS5hY3RpdmUgPSAhMTtcclxuICAgICAgICAyID09PSB0aGlzLmNvbmZpZy5jb2luX3R5cGVcclxuICAgICAgICAgICAgPyAoKHRoaXMuY29pbkxhYmxlLm5vZGUucGFyZW50LmNoaWxkcmVuWzBdLmFjdGl2ZSA9ICExKSxcclxuICAgICAgICAgICAgICAodGhpcy5jb2luTGFibGUuc3RyaW5nID0gXCLlhY3otLlcIiksXHJcbiAgICAgICAgICAgICAgKHRoaXMuYnRuQnV5LmNoaWxkcmVuWzFdLmFjdGl2ZSA9ICEwKSxcclxuICAgICAgICAgICAgICAodGhpcy5idXlUeXBlID0gMiksXHJcbiAgICAgICAgICAgICAgdC5idXlDb3VudCA+IDAgJiZcclxuICAgICAgICAgICAgICAgICAgKCh0aGlzLmNvaW5MYWJsZS5zdHJpbmcgPSBcIuWFjei0uVwiKSxcclxuICAgICAgICAgICAgICAgICAgKHRoaXMuYnRuQnV5LmNoaWxkcmVuWzFdLmFjdGl2ZSA9ICExKSxcclxuICAgICAgICAgICAgICAgICAgKHRoaXMuYnV5VHlwZSA9IDEpLFxyXG4gICAgICAgICAgICAgICAgICAodGhpcy5jb2luTGFibGUubm9kZS5wYXJlbnQuY2hpbGRyZW5bMV0uYWN0aXZlID0gITApKSlcclxuICAgICAgICAgICAgOiAzID09PSB0aGlzLmNvbmZpZy5jb2luX3R5cGVcclxuICAgICAgICAgICAgPyAoKHRoaXMuY29pbkxhYmxlLnN0cmluZyA9IFwi5YWN6LS5XCIpLFxyXG4gICAgICAgICAgICAgICh0aGlzLmNvaW5MYWJsZS5ub2RlLnBhcmVudC5jaGlsZHJlblswXS5hY3RpdmUgPSAhMSksXHJcbiAgICAgICAgICAgICAgKHRoaXMuY29pbkxhYmxlLm5vZGUucGFyZW50LmNoaWxkcmVuWzFdLmFjdGl2ZSA9ICEwKSxcclxuICAgICAgICAgICAgICAodGhpcy5idXlUeXBlID0gMSksXHJcbiAgICAgICAgICAgICAgdGhpcy5jb25maWcuY29pbl9udW0gPiAxICYmXHJcbiAgICAgICAgICAgICAgICAgICgodGhpcy5hZExpbWl0TGFibGUubm9kZS5hY3RpdmUgPSAhMCksXHJcbiAgICAgICAgICAgICAgICAgICh0aGlzLmFkTGltaXRMYWJsZS5zdHJpbmcgPSBcIihcIiArIHQudmlkZW9fY291bnQgKyBcIi9cIiArIHRoaXMuY29uZmlnLmNvaW5fbnVtICsgXCIpXCIpKSlcclxuICAgICAgICAgICAgOiA0ID09PSB0aGlzLmNvbmZpZy5jb2luX3R5cGUgJiZcclxuICAgICAgICAgICAgICAoKHRoaXMuY29pbkxhYmxlLm5vZGUucGFyZW50LmNoaWxkcmVuWzBdLmFjdGl2ZSA9ICExKSxcclxuICAgICAgICAgICAgICAodGhpcy5jb2luTGFibGUuc3RyaW5nID0gXCLlhY3otLlcIiksXHJcbiAgICAgICAgICAgICAgKHRoaXMuYnV5VHlwZSA9IDIpKTtcclxuICAgIH07XHJcbiAgICBlLnByb3RvdHlwZS5jbGlja0J1eSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgdCA9IHRoaXM7XHJcbiAgICAgICAgJHJlbW90ZUF1ZGlvLmRlZmF1bHQuaW5zdGFuY2UucGxheUVmZmVjdE11c2ljKFwiQ2xpY2tcIik7XHJcbiAgICAgICAgdmFyIGUgPSAkc2hvcENvbnRleHQuZGVmYXVsdC5JbnMuZ2V0U2hvcFJlc1JlY29yZEJ5SWQodGhpcy5jb25maWcuaWQpO1xyXG4gICAgICAgIGlmICghKDAgIT09IHRoaXMuY29uZmlnLmJ1eV9udW0gJiYgZS5idXlDb3VudCA+PSB0aGlzLmNvbmZpZy5idXlfbnVtKSkge1xyXG4gICAgICAgICAgICAwICE9PSB0aGlzLmJ1eVR5cGUgfHwgJHVzZXJEYXRhQ29udGV4dC5kZWZhdWx0Lklucy5vcGVhckRpYW1vbmQoLXRoaXMuY29uZmlnLmNvaW5fbnVtKVxyXG4gICAgICAgICAgICAgICAgPyAxICE9PSB0aGlzLmJ1eVR5cGVcclxuICAgICAgICAgICAgICAgICAgICA/ICh0aGlzLmJ1eSgpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgJGV2ZW50TWFuYWdlci5kZWZhdWx0LnNlbmQoJGxvY2FsRXZlbnROYW1lLmRlZmF1bHQuUkVOREVSX0RPVCwgJHN0YXJ0Vmlldy5NZW51VHlwZS5TaG9wKSlcclxuICAgICAgICAgICAgICAgICAgICA6ICRhZFNlcnZpY2UuZGVmYXVsdC5JbnMuc2hvd1Jld2FyZGVkVmlkZW8oZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkcGxhdGZvcm0uUGxhdGZvcm0uY3VyclBsYXRGb3JtID09PSAkcGxhdGZvcm0uUGxhdGZvcm1FbnVtLlRPVV9USUFPKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICg0ID09PSB0LmNvbmZpZy50eXBlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYUQuZGVmYXVsdC50b3V0aWFvLnJlcG9ydChcIkZyZWVfQ29pbnNcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKDcgPT09IHQuY29uZmlnLnR5cGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRhRC5kZWZhdWx0LnRvdXRpYW8ucmVwb3J0KFwiRG9nX1NraW5cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOCA9PT0gdC5jb25maWcudHlwZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAkYUQuZGVmYXVsdC50b3V0aWFvLnJlcG9ydChcInBsYW5lX3NraW5cIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogOSA9PT0gdC5jb25maWcudHlwZSAmJiAkYUQuZGVmYXVsdC50b3V0aWFvLnJlcG9ydChcImFkZnJlZVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKDMgPT09IHQuY29uZmlnLmNvaW5fdHlwZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZSA9ICRzaG9wQ29udGV4dC5kZWZhdWx0Lklucy5nZXRTaG9wUmVzUmVjb3JkQnlJZCh0LmNvbmZpZy5pZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUudmlkZW9fY291bnQrKztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZS52aWRlb19jb3VudCA+PSB0LmNvbmZpZy5jb2luX251bVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAoKGUudmlkZW9fY291bnQgPSAwKSwgdC5idXkoKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogKCRzaG9wQ29udGV4dC5kZWZhdWx0Lklucy5hZGRTaG9wUmVzUmVjb3JkVmlkZW8oZS5pZCwgZS52aWRlb19jb3VudCksIHQucmVuZGVyKCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHQuYnV5KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIDogJHBvcHVwTWFuYWdlci5Qb3B1cE1hbmFnZXIuaW5zdGFuY2Uub3BlbihcclxuICAgICAgICAgICAgICAgICAgICAgICRhc3NldHNNYXAuQXNzZXRzTWFwLlBvcFVwQnVuZGxlcy5wcmVmYWJzLmFzc2V0c0xpc3QuQ29pbkRpYW1vbmRWaWV3LFxyXG4gICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICRjb2luRGlhbW9uZFZpZXcuQXN0VHlwZS5ESUFNT05cclxuICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgZS5wcm90b3R5cGUuYnV5ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciB0ID0gdGhpcztcclxuICAgICAgICBpZiAoMTAgIT09IHRoaXMuY29uZmlnLnR5cGUpIHtcclxuICAgICAgICAgICAgJHNob3BDb250ZXh0LmRlZmF1bHQuSW5zLmFkZFNob3BSZXNSZWNvcmQodGhpcy5jb25maWcuaWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgZSA9IFtdO1xyXG4gICAgICAgIGlmICgxID09PSB0aGlzLmNvbmZpZy50eXBlKSB7XHJcbiAgICAgICAgICAgIHZhciBpID0gJHNlZWRVdGlsLmRlZmF1bHQucmFuZG9tQ291bnQoMSwgNiwgJHNlZWRVdGlsLmRlZmF1bHQucmFuZG9tRnJvbSgxLCA0KSk7XHJcbiAgICAgICAgICAgIHZhciBvID0gJHNlZWRVdGlsLmRlZmF1bHQuc3BsaXROdW1iZXIodGhpcy5jb25maWcucmV3YXJkX251bSwgaS5sZW5ndGgpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhpLCBvKTtcclxuICAgICAgICAgICAgZm9yICh2YXIgbiA9IDA7IG4gPCBvLmxlbmd0aDsgbisrKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcyA9IG9bbl07XHJcbiAgICAgICAgICAgICAgICAkdXNlckRhdGFDb250ZXh0LmRlZmF1bHQuSW5zLm9wZWFyRXF1aXBCb29rKGlbbl0sIHMpO1xyXG4gICAgICAgICAgICAgICAgZS5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiAzLFxyXG4gICAgICAgICAgICAgICAgICAgIGV4dDogaVtuXSxcclxuICAgICAgICAgICAgICAgICAgICBudW06IHNcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICRldmVudE1hbmFnZXIuZGVmYXVsdC5zZW5kKCRsb2NhbEV2ZW50TmFtZS5kZWZhdWx0LlJFTkRFUl9ET1QsICRzdGFydFZpZXcuTWVudVR5cGUuUm9sZSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKDIgPT09IHRoaXMuY29uZmlnLnR5cGUpIHtcclxuICAgICAgICAgICAgICAgIHZhciByID0gJHNlZWRVdGlsLmRlZmF1bHQucmFuZG9tRnJvbSgxLCA0KTtcclxuICAgICAgICAgICAgICAgIHZhciBsID0gJHNraWxsQ29udGV4dC5kZWZhdWx0Lklucy5nZXRVc2VTa2lsbElkcygpO1xyXG4gICAgICAgICAgICAgICAgciA9IE1hdGgubWluKGwubGVuZ3RoLCByKTtcclxuICAgICAgICAgICAgICAgIGwgPSAkc2VlZFV0aWwuZGVmYXVsdC5yYW5kb21BcnIobCwgcik7XHJcbiAgICAgICAgICAgICAgICB2YXIgZCA9ICRzZWVkVXRpbC5kZWZhdWx0LnNwbGl0TnVtYmVyKHRoaXMuY29uZmlnLnJld2FyZF9udW0sIHIpO1xyXG4gICAgICAgICAgICAgICAgZm9yIChuID0gMDsgbiA8IHI7IG4rKykge1xyXG4gICAgICAgICAgICAgICAgICAgICR1c2VyRGF0YUNvbnRleHQuZGVmYXVsdC5JbnMub3BlYXJTa2lsbEJvb2sobFtuXSwgZFtuXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZS5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogNCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXh0OiBsW25dLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBudW06IGRbbl1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICRldmVudE1hbmFnZXIuZGVmYXVsdC5zZW5kKCRsb2NhbEV2ZW50TmFtZS5kZWZhdWx0LlJFTkRFUl9ET1QsICRzdGFydFZpZXcuTWVudVR5cGUuU2tpbGwpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYgKDMgPT09IHRoaXMuY29uZmlnLnR5cGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAkdXNlckRhdGFDb250ZXh0LmRlZmF1bHQuSW5zLm9wZWFyVXBncmFkZVN0b25lKHRoaXMuY29uZmlnLnJld2FyZF9udW0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGUucHVzaCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IDcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG51bTogdGhpcy5jb25maWcucmV3YXJkX251bVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICRldmVudE1hbmFnZXIuZGVmYXVsdC5zZW5kKCRsb2NhbEV2ZW50TmFtZS5kZWZhdWx0LlJFTkRFUl9ET1QsICRzdGFydFZpZXcuTWVudVR5cGUuUm9sZSk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICg0ID09PSB0aGlzLmNvbmZpZy50eXBlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICR1c2VyRGF0YUNvbnRleHQuZGVmYXVsdC5JbnMub3BlYXJDb2luKHRoaXMuY29uZmlnLnJld2FyZF9udW0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bTogdGhpcy5jb25maWcucmV3YXJkX251bVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50TWFuYWdlci5kZWZhdWx0LnNlbmQoJGxvY2FsRXZlbnROYW1lLmRlZmF1bHQuUkVOREVSX0RPVCwgJHN0YXJ0Vmlldy5NZW51VHlwZS5BTEwpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICg1ID09PSB0aGlzLmNvbmZpZy50eXBlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdXNlckRhdGFDb250ZXh0LmRlZmF1bHQuSW5zLm9wZWFyUG93ZXIodGhpcy5jb25maWcucmV3YXJkX251bSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IDgsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbnVtOiB0aGlzLmNvbmZpZy5yZXdhcmRfbnVtXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICg3ID09PSB0aGlzLmNvbmZpZy50eXBlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHAgPSAkcm9sZUNvbnRleHQuZGVmYXVsdC5pbnMuZ2V0Um9ib3RTa2luSW5mbygyKSkuc2hhcmQgKz0gMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcm9sZUNvbnRleHQuZGVmYXVsdC5pbnMuc2V0Um9ib3RTa2luSW5mbyhwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAxMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbnVtOiB0aGlzLmNvbmZpZy5yZXdhcmRfbnVtLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHQ6IDJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKDggPT09IHRoaXMuY29uZmlnLnR5cGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChwID0gJHJvbGVDb250ZXh0LmRlZmF1bHQuaW5zLmdldFJvYm90U2tpbkluZm8oMykpLnNoYXJkICs9IDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyb2xlQ29udGV4dC5kZWZhdWx0Lmlucy5zZXRSb2JvdFNraW5JbmZvKHApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogMTEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBudW06IHRoaXMuY29uZmlnLnJld2FyZF9udW0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHQ6IDNcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKDkgPT09IHRoaXMuY29uZmlnLnR5cGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR1c2VyRGF0YUNvbnRleHQuZGVmYXVsdC5JbnMub3BlYXJBZENvaW4odGhpcy5jb25maWcucmV3YXJkX251bSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IDEyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bTogdGhpcy5jb25maWcucmV3YXJkX251bVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoMTAgPT09IHRoaXMuY29uZmlnLnR5cGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdm9pZCAkcG9wdXBNYW5hZ2VyLlBvcHVwTWFuYWdlci5pbnN0YW5jZS5vcGVuKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYXNzZXRzTWFwLkFzc2V0c01hcC5Qb3BVcEJ1bmRsZXMucHJlZmFicy5hc3NldHNMaXN0LkFkQ29pblZpZXcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bGwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsb3NlQ2FsbGJhY2s6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0LnJlbmRlcigpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAkcG9wdXBNYW5hZ2VyLlBvcHVwTWFuYWdlci5pbnN0YW5jZS5vcGVuKCRhc3NldHNNYXAuQXNzZXRzTWFwLlBvcFVwQnVuZGxlcy5wcmVmYWJzLmFzc2V0c0xpc3QuUmV3YXJkVmlldywge1xyXG4gICAgICAgICAgICBpbmZvczogZVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMucmVuZGVyKCk7XHJcbiAgICB9O1xyXG4gICAgX19kZWNvcmF0ZShbSShjYy5TcHJpdGUpXSwgZS5wcm90b3R5cGUsIFwiaWNvblwiLCB2b2lkIDApO1xyXG4gICAgX19kZWNvcmF0ZShbSShjYy5MYWJlbCldLCBlLnByb3RvdHlwZSwgXCJ0aXRsZUxhYmxlXCIsIHZvaWQgMCk7XHJcbiAgICBfX2RlY29yYXRlKFtJKGNjLkxhYmVsKV0sIGUucHJvdG90eXBlLCBcImxpbWl0TGFiZWxcIiwgdm9pZCAwKTtcclxuICAgIF9fZGVjb3JhdGUoW0koY2MuTGFiZWwpXSwgZS5wcm90b3R5cGUsIFwibnVtTGFiZWxcIiwgdm9pZCAwKTtcclxuICAgIF9fZGVjb3JhdGUoW0koY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJidG5CdXlcIiwgdm9pZCAwKTtcclxuICAgIF9fZGVjb3JhdGUoW0koY2MuTGFiZWwpXSwgZS5wcm90b3R5cGUsIFwiY29pbkxhYmxlXCIsIHZvaWQgMCk7XHJcbiAgICBfX2RlY29yYXRlKFtJKGNjLkxhYmVsKV0sIGUucHJvdG90eXBlLCBcImFkTGltaXRMYWJsZVwiLCB2b2lkIDApO1xyXG4gICAgcmV0dXJuIF9fZGVjb3JhdGUoW0NdLCBlKTtcclxufSkoY2MuQ29tcG9uZW50KTtcclxuZXhwb3J0cy5kZWZhdWx0ID0gUDtcclxuIl19