{"version":3,"sources":["assets\\game_script\\scripts\\CBCEncryptor.js"],"names":["o","exports","CBCEncryptor","s","t","e","apply","arguments","__extends","prototype","processBlock","_cipher","cfg","blockSize","Error","xorBlock","encryptBlock","_prevBlock","slice","i","_iv","n","require","BlockCipherModeAlgorithm"],"mappings":";;;;;;AAAA,IAAIA,CAAJ;AACAC,OAAO,CAACC,YAAR,GAAuB,KAAK,CAA5B;;AACA,IAAIC,CAAC,GAAI,UAAUC,CAAV,EAAa;EAClB,SAASC,CAAT,GAAa;IACT,OAAQ,SAASD,CAAT,IAAcA,CAAC,CAACE,KAAF,CAAQ,IAAR,EAAcC,SAAd,CAAf,IAA4C,IAAnD;EACH;;EACDC,SAAS,CAACH,CAAD,EAAID,CAAJ,CAAT;;EACAC,CAAC,CAACI,SAAF,CAAYC,YAAZ,GAA2B,UAAUN,CAAV,EAAaC,CAAb,EAAgB;IACvC,IAAI,KAAK,CAAL,KAAW,KAAKM,OAAL,CAAaC,GAAb,CAAiBC,SAAhC,EAA2C;MACvC,MAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;IACH;;IACD,KAAKC,QAAL,CAAcX,CAAd,EAAiBC,CAAjB,EAAoB,KAAKM,OAAL,CAAaC,GAAb,CAAiBC,SAArC;;IACA,KAAKF,OAAL,CAAaK,YAAb,CAA0BZ,CAA1B,EAA6BC,CAA7B;;IACA,KAAKY,UAAL,GAAkBb,CAAC,CAACc,KAAF,CAAQb,CAAR,EAAWA,CAAC,GAAG,KAAKM,OAAL,CAAaC,GAAb,CAAiBC,SAAhC,CAAlB;EACH,CAPD;;EAQAR,CAAC,CAACI,SAAF,CAAYM,QAAZ,GAAuB,UAAUX,CAAV,EAAaC,CAAb,EAAgBc,CAAhB,EAAmB;IACtC,IAAInB,CAAJ;IACA,KAAKoB,GAAL,IAAapB,CAAC,GAAG,KAAKoB,GAAV,EAAiB,KAAKA,GAAL,GAAW,KAAK,CAA7C,IAAoDpB,CAAC,GAAG,KAAKiB,UAA7D;;IACA,IAAI,KAAK,CAAL,KAAWjB,CAAf,EAAkB;MACd,KAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuBE,CAAC,EAAxB,EAA4B;QACxBjB,CAAC,CAACC,CAAC,GAAGgB,CAAL,CAAD,IAAYrB,CAAC,CAACqB,CAAD,CAAb;MACH;IACJ;EACJ,CARD;;EASA,OAAOhB,CAAP;AACH,CAvBO,CAuBLiB,OAAO,CAAC,4BAAD,CAAP,CAAsCC,wBAvBjC,CAAR;;AAwBAtB,OAAO,CAACC,YAAR,GAAuBC,CAAvB","sourceRoot":"/","sourcesContent":["var o;\r\nexports.CBCEncryptor = void 0;\r\nvar s = (function (t) {\r\n    function e() {\r\n        return (null !== t && t.apply(this, arguments)) || this;\r\n    }\r\n    __extends(e, t);\r\n    e.prototype.processBlock = function (t, e) {\r\n        if (void 0 === this._cipher.cfg.blockSize) {\r\n            throw new Error(\"missing blockSize in cipher config\");\r\n        }\r\n        this.xorBlock(t, e, this._cipher.cfg.blockSize);\r\n        this._cipher.encryptBlock(t, e);\r\n        this._prevBlock = t.slice(e, e + this._cipher.cfg.blockSize);\r\n    };\r\n    e.prototype.xorBlock = function (t, e, i) {\r\n        var o;\r\n        this._iv ? ((o = this._iv), (this._iv = void 0)) : (o = this._prevBlock);\r\n        if (void 0 !== o) {\r\n            for (var n = 0; n < i; n++) {\r\n                t[e + n] ^= o[n];\r\n            }\r\n        }\r\n    };\r\n    return e;\r\n})(require(\"./BlockCipherModeAlgorithm\").BlockCipherModeAlgorithm);\r\nexports.CBCEncryptor = s;\r\n"]}