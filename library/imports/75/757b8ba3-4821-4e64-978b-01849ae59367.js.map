{"version":3,"sources":["assets\\game_script\\scripts\\Maths.js"],"names":["exports","RVOMath","Vector2","Line","o","t","e","x","y","multiply","multiply2","i","division","subtract","addition","n","abs","sqrt","absSq","normalize","det","distSqPointLineSegment","fabs","Math","leftOf","sqr","transfromFloat","floor","RVO_EPSILON","RVO_POSITIVEINFINITY"],"mappings":"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","sourceRoot":"/","sourcesContent":["exports.RVOMath = exports.Vector2 = exports.Line = void 0;\r\nexports.Line = function () {};\r\nvar o = (function () {\r\n    function t(t, e) {\r\n        if (void 0 === t) {\r\n            t = 0;\r\n        }\r\n        if (void 0 === e) {\r\n            e = 0;\r\n        }\r\n        this.x = t;\r\n        this.y = e;\r\n    }\r\n    t.multiply = function (t, e) {\r\n        return t.x * e.x + t.y * e.y;\r\n    };\r\n    t.multiply2 = function (e, i) {\r\n        return new t(i.x * e, i.y * e);\r\n    };\r\n    t.division = function (e, i) {\r\n        if (0 == i) {\r\n            i = 1;\r\n        }\r\n        return new t(e.x / i, e.y / i);\r\n    };\r\n    t.subtract = function (e, i) {\r\n        return new t(e.x - i.x, e.y - i.y);\r\n    };\r\n    t.addition = function (e, i) {\r\n        return new t(e.x + i.x, e.y + i.y);\r\n    };\r\n    return t;\r\n})();\r\nexports.Vector2 = o;\r\nvar n = (function () {\r\n    function t() {}\r\n    t.abs = function (t) {\r\n        return this.sqrt(this.absSq(t));\r\n    };\r\n    t.absSq = function (t) {\r\n        return o.multiply(t, t);\r\n    };\r\n    t.normalize = function (t) {\r\n        return o.division(t, this.abs(t));\r\n    };\r\n    t.det = function (t, e) {\r\n        return t.x * e.y - t.y * e.x;\r\n    };\r\n    t.distSqPointLineSegment = function (t, e, i) {\r\n        var n = o.multiply(o.subtract(i, t), o.subtract(e, t)) / this.absSq(o.subtract(e, t));\r\n        return n < 0\r\n            ? this.absSq(o.subtract(i, t))\r\n            : n > 1\r\n            ? this.absSq(o.subtract(i, e))\r\n            : this.absSq(o.subtract(i, o.addition(t, o.multiply2(n, o.subtract(e, t)))));\r\n    };\r\n    t.fabs = function (t) {\r\n        return Math.abs(t);\r\n    };\r\n    t.leftOf = function (t, e, i) {\r\n        return this.det(o.subtract(t, i), o.subtract(e, t));\r\n    };\r\n    t.sqr = function (t) {\r\n        return t * t;\r\n    };\r\n    t.sqrt = function (t) {\r\n        return Math.sqrt(t);\r\n    };\r\n    t.transfromFloat = function (t) {\r\n        return Math.floor(10 * t) / 10;\r\n    };\r\n    t.RVO_EPSILON = 1e-5;\r\n    t.RVO_POSITIVEINFINITY = 1e13;\r\n    return t;\r\n})();\r\nexports.RVOMath = n;\r\n"]}