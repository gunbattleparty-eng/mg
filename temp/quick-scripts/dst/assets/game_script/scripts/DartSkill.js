
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/game_script/scripts/DartSkill.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8c3831hNl1Am4k4WORxteIH', 'DartSkill');
// game_script/scripts/DartSkill.js

"use strict";

var o;
exports.DartSkill = void 0;

var $skillContext = require("./SkillContext");

var $gameSkillInfo = require("./GameSkillInfo");

var a = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    e.skillReleaseCount = 1;
    e.speed = [0, 0, 0, 1];
    e.time = [0, 0, 0, 1];
    e.interval = 0;
    e.slowAdd = 0;
    e.size = 1;
    e.stayTime = 0;
    e.stunTime = 0;
    e.burnTime = 0;
    e.burnAtk = 0;
    e.delayRecover = 0.1;
    e.releaseCount = 1;
    e.releaseSize = 1;
    e.releaseAtk = [0, 0, 0, 1];
    e.releaseInterval = 0;
    e.releaseTime = 0;
    e.isDoubleSize = !1;
    e.allAtkTime = 0;
    e.allAtkAdd = 0;
    e.bounceSpeed = 0;
    e.releaseDistance = 0;
    e.enemySlowTime = 0;
    e.enemySlowAdd = 0;
    return e;
  }

  __extends(e, t);

  e.prototype.chooseSkill = function (t) {
    247 === t.id ? (this.speed[$gameSkillInfo.Skill4Param.BASIC] = t.add_sx[0], this.time[$gameSkillInfo.Skill4Param.BASIC] = t.add_sx[1], this.interval = t.add_sx[2], this.skillCD[$gameSkillInfo.Skill4Param.BASIC] = $skillContext["default"].Ins.getSkillCD(t), this.skillAtkRange[$gameSkillInfo.Skill4Param.BASIC] = t.add_sx[4], this.skillAtk[$gameSkillInfo.Skill4Param.BASIC] = $skillContext["default"].Ins.getBasicAtk(t), this.slowAdd = t.add_sx[6], this.size = t.add_sx[7], this.releaseSize = this.size, this.caculateFinal(this.speed), this.caculateFinal(this.time, !1), this.caculateFinal(this.skillCD, !1), this.caculateFinal(this.skillAtkRange), this.caculateFinal(this.skillAtk)) : 248 === t.id ? this.updateAndCalculate(this.skillAtk, t.add_sx[0], $gameSkillInfo.Skill4Param.ADD) : 249 === t.id ? this.updateAndCalculate(this.time, t.add_sx[0], $gameSkillInfo.Skill4Param.ADD) : 250 === t.id ? (this.updateAndCalculate(this.speed, t.add_sx[0], $gameSkillInfo.Skill4Param.ADD), this.updateAndCalculate(this.skillAtk, t.add_sx[1], $gameSkillInfo.Skill4Param.ADD)) : 251 === t.id ? this.size += t.add_sx[0] : 252 === t.id ? (this.releaseCount = t.add_sx[0], this.releaseSize = t.add_sx[1], this.isDoubleSize && (this.releaseSize *= 2), this.releaseTime = t.add_sx[2], this.releaseAtk[$gameSkillInfo.Skill4Param.BASIC] = this.getBasicAtk(t.add_sx[3]), this.releaseInterval = t.add_sx[4], this.releaseDistance = t.add_sx[5], this.caculateFinal(this.releaseAtk)) : 253 === t.id ? this.stayTime += t.add_sx[0] : 254 === t.id ? this.stunTime += t.add_sx[0] : 255 === t.id ? (this.burnTime += t.add_sx[0], this.burnAtk = this.getBasicAtk(t.add_sx[1])) : 257 === t.id ? (this.enemySlowTime = t.add_sx[0], this.enemySlowAdd = t.add_sx[1]) : 258 === t.id ? this.isDoubleSize = !0 : 259 === t.id ? (this.allAtkTime = t.add_sx[0], this.allAtkAdd = t.add_sx[1]) : 261 === t.id ? this.bounceSpeed = t.add_sx[0] : 262 === t.id && (this.skillReleaseCount += t.add_sx[0], this.updateAndCalculate(this.skillAtk, t.add_sx[1], $gameSkillInfo.Skill4Param.DEC));
  };

  e.prototype.getSlowSpeed = function () {
    return Math.ceil(this.speed[$gameSkillInfo.Skill4Param.FINAL] * (1 + this.slowAdd));
  };

  e.prototype.getNormalSpeed = function (t) {
    if (void 0 === t) {
      t = 0;
    }

    return Math.ceil(this.speed[$gameSkillInfo.Skill4Param.FINAL] * (1 + this.bounceSpeed * t));
  };

  e.prototype.toString = function () {
    return t.prototype.toString.call(this) + "\n        技能释放次数: " + this.skillReleaseCount + "\n        飞镖速度: " + this.speed + "\n        飞镖持续时间: " + this.time + "\n        飞镖伤害间隔: " + this.interval + "\n        飞镖减速系数: " + this.slowAdd + "\n        飞镖大小: " + this.size + "\n        结束后停留时长: " + this.stayTime + "\n        眩晕时间: " + this.stunTime + "\n        点燃时长: " + this.burnTime + "\n        点燃伤害: " + this.burnAtk + "\n        延迟恢复时间: " + this.delayRecover + "\n        释放利刃数量: " + this.releaseCount + "\n        利刃大小: " + this.releaseSize + "\n        利刃伤害: " + this.releaseAtk + "\n        利刃伤害间隔: " + this.releaseInterval + "\n        利刃持续时间: " + this.releaseTime + "\n        选择是是否体积翻倍: " + this.isDoubleSize + "\n        使敌人内伤时间: " + this.allAtkTime + "\n        使敌人内伤加成: " + this.allAtkAdd + "\n        弹射加速: " + this.bounceSpeed + "\n        ";
  };

  return e;
}(require("./BaseSkill").BaseSkill);

exports.DartSkill = a;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZV9zY3JpcHRcXHNjcmlwdHNcXERhcnRTa2lsbC5qcyJdLCJuYW1lcyI6WyJvIiwiZXhwb3J0cyIsIkRhcnRTa2lsbCIsIiRza2lsbENvbnRleHQiLCJyZXF1aXJlIiwiJGdhbWVTa2lsbEluZm8iLCJhIiwidCIsImUiLCJhcHBseSIsImFyZ3VtZW50cyIsInNraWxsUmVsZWFzZUNvdW50Iiwic3BlZWQiLCJ0aW1lIiwiaW50ZXJ2YWwiLCJzbG93QWRkIiwic2l6ZSIsInN0YXlUaW1lIiwic3R1blRpbWUiLCJidXJuVGltZSIsImJ1cm5BdGsiLCJkZWxheVJlY292ZXIiLCJyZWxlYXNlQ291bnQiLCJyZWxlYXNlU2l6ZSIsInJlbGVhc2VBdGsiLCJyZWxlYXNlSW50ZXJ2YWwiLCJyZWxlYXNlVGltZSIsImlzRG91YmxlU2l6ZSIsImFsbEF0a1RpbWUiLCJhbGxBdGtBZGQiLCJib3VuY2VTcGVlZCIsInJlbGVhc2VEaXN0YW5jZSIsImVuZW15U2xvd1RpbWUiLCJlbmVteVNsb3dBZGQiLCJfX2V4dGVuZHMiLCJwcm90b3R5cGUiLCJjaG9vc2VTa2lsbCIsImlkIiwiU2tpbGw0UGFyYW0iLCJCQVNJQyIsImFkZF9zeCIsInNraWxsQ0QiLCJJbnMiLCJnZXRTa2lsbENEIiwic2tpbGxBdGtSYW5nZSIsInNraWxsQXRrIiwiZ2V0QmFzaWNBdGsiLCJjYWN1bGF0ZUZpbmFsIiwidXBkYXRlQW5kQ2FsY3VsYXRlIiwiQUREIiwiREVDIiwiZ2V0U2xvd1NwZWVkIiwiTWF0aCIsImNlaWwiLCJGSU5BTCIsImdldE5vcm1hbFNwZWVkIiwidG9TdHJpbmciLCJjYWxsIiwiQmFzZVNraWxsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUo7QUFDQUMsT0FBTyxDQUFDQyxTQUFSLEdBQW9CLEtBQUssQ0FBekI7O0FBQ0EsSUFBSUMsYUFBYSxHQUFHQyxPQUFPLENBQUMsZ0JBQUQsQ0FBM0I7O0FBQ0EsSUFBSUMsY0FB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WUFsQ0wsR0FtQ0EscUJBbkNBLEdBb0NBLEtBQUtDLFVBcENMLEdBcUNBLHFCQXJDQSxHQXNDQSxLQUFLQyxTQXRDTCxHQXVDQSxrQkF2Q0EsR0F3Q0EsS0FBS0MsV0F4Q0wsR0F5Q0EsWUExQ0o7RUE0Q0gsQ0E3Q0Q7O0VBOENBLE9BQU90QixDQUFQO0FBQ0gsQ0F6SU8sQ0F5SUxKLE9BQU8sQ0FBQyxhQUFELENBQVAsQ0FBdUJzRCxTQXpJbEIsQ0FBUjs7QUEwSUF6RCxPQUFPLENBQUNDLFNBQVIsR0FBb0JJLENBQXBCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbztcclxuZXhwb3J0cy5EYXJ0U2tpbGwgPSB2b2lkIDA7XHJcbnZhciAkc2tpbGxDb250ZXh0ID0gcmVxdWlyZShcIi4vU2tpbGxDb250ZXh0XCIpO1xyXG52YXIgJGdhbWVTa2lsbEluZm8gPSByZXF1aXJlKFwiLi9HYW1lU2tpbGxJbmZvXCIpO1xyXG52YXIgYSA9IChmdW5jdGlvbiAodCkge1xyXG4gICAgZnVuY3Rpb24gZSgpIHtcclxuICAgICAgICB2YXIgZSA9IChudWxsICE9PSB0ICYmIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfHwgdGhpcztcclxuICAgICAgICBlLnNraWxsUmVsZWFzZUNvdW50ID0gMTtcclxuICAgICAgICBlLnNwZWVkID0gWzAsIDAsIDAsIDFdO1xyXG4gICAgICAgIGUudGltZSA9IFswLCAwLCAwLCAxXTtcclxuICAgICAgICBlLmludGVydmFsID0gMDtcclxuICAgICAgICBlLnNsb3dBZGQgPSAwO1xyXG4gICAgICAgIGUuc2l6ZSA9IDE7XHJcbiAgICAgICAgZS5zdGF5VGltZSA9IDA7XHJcbiAgICAgICAgZS5zdHVuVGltZSA9IDA7XHJcbiAgICAgICAgZS5idXJuVGltZSA9IDA7XHJcbiAgICAgICAgZS5idXJuQXRrID0gMDtcclxuICAgICAgICBlLmRlbGF5UmVjb3ZlciA9IDAuMTtcclxuICAgICAgICBlLnJlbGVhc2VDb3VudCA9IDE7XHJcbiAgICAgICAgZS5yZWxlYXNlU2l6ZSA9IDE7XHJcbiAgICAgICAgZS5yZWxlYXNlQXRrID0gWzAsIDAsIDAsIDFdO1xyXG4gICAgICAgIGUucmVsZWFzZUludGVydmFsID0gMDtcclxuICAgICAgICBlLnJlbGVhc2VUaW1lID0gMDtcclxuICAgICAgICBlLmlzRG91YmxlU2l6ZSA9ICExO1xyXG4gICAgICAgIGUuYWxsQXRrVGltZSA9IDA7XHJcbiAgICAgICAgZS5hbGxBdGtBZGQgPSAwO1xyXG4gICAgICAgIGUuYm91bmNlU3BlZWQgPSAwO1xyXG4gICAgICAgIGUucmVsZWFzZURpc3RhbmNlID0gMDtcclxuICAgICAgICBlLmVuZW15U2xvd1RpbWUgPSAwO1xyXG4gICAgICAgIGUuZW5lbXlTbG93QWRkID0gMDtcclxuICAgICAgICByZXR1cm4gZTtcclxuICAgIH1cclxuICAgIF9fZXh0ZW5kcyhlLCB0KTtcclxuICAgIGUucHJvdG90eXBlLmNob29zZVNraWxsID0gZnVuY3Rpb24gKHQpIHtcclxuICAgICAgICAyNDcgPT09IHQuaWRcclxuICAgICAgICAgICAgPyAoKHRoaXMuc3BlZWRbJGdhbWVTa2lsbEluZm8uU2tpbGw0UGFyYW0uQkFTSUNdID0gdC5hZGRfc3hbMF0pLFxyXG4gICAgICAgICAgICAgICh0aGlzLnRpbWVbJGdhbWVTa2lsbEluZm8uU2tpbGw0UGFyYW0uQkFTSUNdID0gdC5hZGRfc3hbMV0pLFxyXG4gICAgICAgICAgICAgICh0aGlzLmludGVydmFsID0gdC5hZGRfc3hbMl0pLFxyXG4gICAgICAgICAgICAgICh0aGlzLnNraWxsQ0RbJGdhbWVTa2lsbEluZm8uU2tpbGw0UGFyYW0uQkFTSUNdID0gJHNraWxsQ29udGV4dC5kZWZhdWx0Lklucy5nZXRTa2lsbENEKHQpKSxcclxuICAgICAgICAgICAgICAodGhpcy5za2lsbEF0a1JhbmdlWyRnYW1lU2tpbGxJbmZvLlNraWxsNFBhcmFtLkJBU0lDXSA9IHQuYWRkX3N4WzRdKSxcclxuICAgICAgICAgICAgICAodGhpcy5za2lsbEF0a1skZ2FtZVNraWxsSW5mby5Ta2lsbDRQYXJhbS5CQVNJQ10gPSAkc2tpbGxDb250ZXh0LmRlZmF1bHQuSW5zLmdldEJhc2ljQXRrKHQpKSxcclxuICAgICAgICAgICAgICAodGhpcy5zbG93QWRkID0gdC5hZGRfc3hbNl0pLFxyXG4gICAgICAgICAgICAgICh0aGlzLnNpemUgPSB0LmFkZF9zeFs3XSksXHJcbiAgICAgICAgICAgICAgKHRoaXMucmVsZWFzZVNpemUgPSB0aGlzLnNpemUpLFxyXG4gICAgICAgICAgICAgIHRoaXMuY2FjdWxhdGVGaW5hbCh0aGlzLnNwZWVkKSxcclxuICAgICAgICAgICAgICB0aGlzLmNhY3VsYXRlRmluYWwodGhpcy50aW1lLCAhMSksXHJcbiAgICAgICAgICAgICAgdGhpcy5jYWN1bGF0ZUZpbmFsKHRoaXMuc2tpbGxDRCwgITEpLFxyXG4gICAgICAgICAgICAgIHRoaXMuY2FjdWxhdGVGaW5hbCh0aGlzLnNraWxsQXRrUmFuZ2UpLFxyXG4gICAgICAgICAgICAgIHRoaXMuY2FjdWxhdGVGaW5hbCh0aGlzLnNraWxsQXRrKSlcclxuICAgICAgICAgICAgOiAyNDggPT09IHQuaWRcclxuICAgICAgICAgICAgPyB0aGlzLnVwZGF0ZUFuZENhbGN1bGF0ZSh0aGlzLnNraWxsQXRrLCB0LmFkZF9zeFswXSwgJGdhbWVTa2lsbEluZm8uU2tpbGw0UGFyYW0uQUREKVxyXG4gICAgICAgICAgICA6IDI0OSA9PT0gdC5pZFxyXG4gICAgICAgICAgICA/IHRoaXMudXBkYXRlQW5kQ2FsY3VsYXRlKHRoaXMudGltZSwgdC5hZGRfc3hbMF0sICRnYW1lU2tpbGxJbmZvLlNraWxsNFBhcmFtLkFERClcclxuICAgICAgICAgICAgOiAyNTAgPT09IHQuaWRcclxuICAgICAgICAgICAgPyAodGhpcy51cGRhdGVBbmRDYWxjdWxhdGUodGhpcy5zcGVlZCwgdC5hZGRfc3hbMF0sICRnYW1lU2tpbGxJbmZvLlNraWxsNFBhcmFtLkFERCksXHJcbiAgICAgICAgICAgICAgdGhpcy51cGRhdGVBbmRDYWxjdWxhdGUodGhpcy5za2lsbEF0aywgdC5hZGRfc3hbMV0sICRnYW1lU2tpbGxJbmZvLlNraWxsNFBhcmFtLkFERCkpXHJcbiAgICAgICAgICAgIDogMjUxID09PSB0LmlkXHJcbiAgICAgICAgICAgID8gKHRoaXMuc2l6ZSArPSB0LmFkZF9zeFswXSlcclxuICAgICAgICAgICAgOiAyNTIgPT09IHQuaWRcclxuICAgICAgICAgICAgPyAoKHRoaXMucmVsZWFzZUNvdW50ID0gdC5hZGRfc3hbMF0pLFxyXG4gICAgICAgICAgICAgICh0aGlzLnJlbGVhc2VTaXplID0gdC5hZGRfc3hbMV0pLFxyXG4gICAgICAgICAgICAgIHRoaXMuaXNEb3VibGVTaXplICYmICh0aGlzLnJlbGVhc2VTaXplICo9IDIpLFxyXG4gICAgICAgICAgICAgICh0aGlzLnJlbGVhc2VUaW1lID0gdC5hZGRfc3hbMl0pLFxyXG4gICAgICAgICAgICAgICh0aGlzLnJlbGVhc2VBdGtbJGdhbWVTa2lsbEluZm8uU2tpbGw0UGFyYW0uQkFTSUNdID0gdGhpcy5nZXRCYXNpY0F0ayh0LmFkZF9zeFszXSkpLFxyXG4gICAgICAgICAgICAgICh0aGlzLnJlbGVhc2VJbnRlcnZhbCA9IHQuYWRkX3N4WzRdKSxcclxuICAgICAgICAgICAgICAodGhpcy5yZWxlYXNlRGlzdGFuY2UgPSB0LmFkZF9zeFs1XSksXHJcbiAgICAgICAgICAgICAgdGhpcy5jYWN1bGF0ZUZpbmFsKHRoaXMucmVsZWFzZUF0aykpXHJcbiAgICAgICAgICAgIDogMjUzID09PSB0LmlkXHJcbiAgICAgICAgICAgID8gKHRoaXMuc3RheVRpbWUgKz0gdC5hZGRfc3hbMF0pXHJcbiAgICAgICAgICAgIDogMjU0ID09PSB0LmlkXHJcbiAgICAgICAgICAgID8gKHRoaXMuc3R1blRpbWUgKz0gdC5hZGRfc3hbMF0pXHJcbiAgICAgICAgICAgIDogMjU1ID09PSB0LmlkXHJcbiAgICAgICAgICAgID8gKCh0aGlzLmJ1cm5UaW1lICs9IHQuYWRkX3N4WzBdKSwgKHRoaXMuYnVybkF0ayA9IHRoaXMuZ2V0QmFzaWNBdGsodC5hZGRfc3hbMV0pKSlcclxuICAgICAgICAgICAgOiAyNTcgPT09IHQuaWRcclxuICAgICAgICAgICAgPyAoKHRoaXMuZW5lbXlTbG93VGltZSA9IHQuYWRkX3N4WzBdKSwgKHRoaXMuZW5lbXlTbG93QWRkID0gdC5hZGRfc3hbMV0pKVxyXG4gICAgICAgICAgICA6IDI1OCA9PT0gdC5pZFxyXG4gICAgICAgICAgICA/ICh0aGlzLmlzRG91YmxlU2l6ZSA9ICEwKVxyXG4gICAgICAgICAgICA6IDI1OSA9PT0gdC5pZFxyXG4gICAgICAgICAgICA/ICgodGhpcy5hbGxBdGtUaW1lID0gdC5hZGRfc3hbMF0pLCAodGhpcy5hbGxBdGtBZGQgPSB0LmFkZF9zeFsxXSkpXHJcbiAgICAgICAgICAgIDogMjYxID09PSB0LmlkXHJcbiAgICAgICAgICAgID8gKHRoaXMuYm91bmNlU3BlZWQgPSB0LmFkZF9zeFswXSlcclxuICAgICAgICAgICAgOiAyNjIgPT09IHQuaWQgJiZcclxuICAgICAgICAgICAgICAoKHRoaXMuc2tpbGxSZWxlYXNlQ291bnQgKz0gdC5hZGRfc3hbMF0pLFxyXG4gICAgICAgICAgICAgIHRoaXMudXBkYXRlQW5kQ2FsY3VsYXRlKHRoaXMuc2tpbGxBdGssIHQuYWRkX3N4WzFdLCAkZ2FtZVNraWxsSW5mby5Ta2lsbDRQYXJhbS5ERUMpKTtcclxuICAgIH07XHJcbiAgICBlLnByb3RvdHlwZS5nZXRTbG93U3BlZWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIE1hdGguY2VpbCh0aGlzLnNwZWVkWyRnYW1lU2tpbGxJbmZvLlNraWxsNFBhcmFtLkZJTkFMXSAqICgxICsgdGhpcy5zbG93QWRkKSk7XHJcbiAgICB9O1xyXG4gICAgZS5wcm90b3R5cGUuZ2V0Tm9ybWFsU3BlZWQgPSBmdW5jdGlvbiAodCkge1xyXG4gICAgICAgIGlmICh2b2lkIDAgPT09IHQpIHtcclxuICAgICAgICAgICAgdCA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBNYXRoLmNlaWwodGhpcy5zcGVlZFskZ2FtZVNraWxsSW5mby5Ta2lsbDRQYXJhbS5GSU5BTF0gKiAoMSArIHRoaXMuYm91bmNlU3BlZWQgKiB0KSk7XHJcbiAgICB9O1xyXG4gICAgZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0aGlzKSArXHJcbiAgICAgICAgICAgIFwiXFxuICAgICAgICDmioDog73ph4rmlL7mrKHmlbA6IFwiICtcclxuICAgICAgICAgICAgdGhpcy5za2lsbFJlbGVhc2VDb3VudCArXHJcbiAgICAgICAgICAgIFwiXFxuICAgICAgICDpo57plZbpgJ/luqY6IFwiICtcclxuICAgICAgICAgICAgdGhpcy5zcGVlZCArXHJcbiAgICAgICAgICAgIFwiXFxuICAgICAgICDpo57plZbmjIHnu63ml7bpl7Q6IFwiICtcclxuICAgICAgICAgICAgdGhpcy50aW1lICtcclxuICAgICAgICAgICAgXCJcXG4gICAgICAgIOmjnumVluS8pOWus+mXtOmalDogXCIgK1xyXG4gICAgICAgICAgICB0aGlzLmludGVydmFsICtcclxuICAgICAgICAgICAgXCJcXG4gICAgICAgIOmjnumVluWHj+mAn+ezu+aVsDogXCIgK1xyXG4gICAgICAgICAgICB0aGlzLnNsb3dBZGQgK1xyXG4gICAgICAgICAgICBcIlxcbiAgICAgICAg6aOe6ZWW5aSn5bCPOiBcIiArXHJcbiAgICAgICAgICAgIHRoaXMuc2l6ZSArXHJcbiAgICAgICAgICAgIFwiXFxuICAgICAgICDnu5PmnZ/lkI7lgZznlZnml7bplb86IFwiICtcclxuICAgICAgICAgICAgdGhpcy5zdGF5VGltZSArXHJcbiAgICAgICAgICAgIFwiXFxuICAgICAgICDnnKnmmZXml7bpl7Q6IFwiICtcclxuICAgICAgICAgICAgdGhpcy5zdHVuVGltZSArXHJcbiAgICAgICAgICAgIFwiXFxuICAgICAgICDngrnnh4Pml7bplb86IFwiICtcclxuICAgICAgICAgICAgdGhpcy5idXJuVGltZSArXHJcbiAgICAgICAgICAgIFwiXFxuICAgICAgICDngrnnh4PkvKTlrrM6IFwiICtcclxuICAgICAgICAgICAgdGhpcy5idXJuQXRrICtcclxuICAgICAgICAgICAgXCJcXG4gICAgICAgIOW7tui/n+aBouWkjeaXtumXtDogXCIgK1xyXG4gICAgICAgICAgICB0aGlzLmRlbGF5UmVjb3ZlciArXHJcbiAgICAgICAgICAgIFwiXFxuICAgICAgICDph4rmlL7liKnliIPmlbDph486IFwiICtcclxuICAgICAgICAgICAgdGhpcy5yZWxlYXNlQ291bnQgK1xyXG4gICAgICAgICAgICBcIlxcbiAgICAgICAg5Yip5YiD5aSn5bCPOiBcIiArXHJcbiAgICAgICAgICAgIHRoaXMucmVsZWFzZVNpemUgK1xyXG4gICAgICAgICAgICBcIlxcbiAgICAgICAg5Yip5YiD5Lyk5a6zOiBcIiArXHJcbiAgICAgICAgICAgIHRoaXMucmVsZWFzZUF0ayArXHJcbiAgICAgICAgICAgIFwiXFxuICAgICAgICDliKnliIPkvKTlrrPpl7TpmpQ6IFwiICtcclxuICAgICAgICAgICAgdGhpcy5yZWxlYXNlSW50ZXJ2YWwgK1xyXG4gICAgICAgICAgICBcIlxcbiAgICAgICAg5Yip5YiD5oyB57ut5pe26Ze0OiBcIiArXHJcbiAgICAgICAgICAgIHRoaXMucmVsZWFzZVRpbWUgK1xyXG4gICAgICAgICAgICBcIlxcbiAgICAgICAg6YCJ5oup5piv5piv5ZCm5L2T56ev57+75YCNOiBcIiArXHJcbiAgICAgICAgICAgIHRoaXMuaXNEb3VibGVTaXplICtcclxuICAgICAgICAgICAgXCJcXG4gICAgICAgIOS9v+aVjOS6uuWGheS8pOaXtumXtDogXCIgK1xyXG4gICAgICAgICAgICB0aGlzLmFsbEF0a1RpbWUgK1xyXG4gICAgICAgICAgICBcIlxcbiAgICAgICAg5L2/5pWM5Lq65YaF5Lyk5Yqg5oiQOiBcIiArXHJcbiAgICAgICAgICAgIHRoaXMuYWxsQXRrQWRkICtcclxuICAgICAgICAgICAgXCJcXG4gICAgICAgIOW8ueWwhOWKoOmAnzogXCIgK1xyXG4gICAgICAgICAgICB0aGlzLmJvdW5jZVNwZWVkICtcclxuICAgICAgICAgICAgXCJcXG4gICAgICAgIFwiXHJcbiAgICAgICAgKTtcclxuICAgIH07XHJcbiAgICByZXR1cm4gZTtcclxufSkocmVxdWlyZShcIi4vQmFzZVNraWxsXCIpLkJhc2VTa2lsbCk7XHJcbmV4cG9ydHMuRGFydFNraWxsID0gYTtcclxuIl19