{"version":3,"sources":["assets\\game_script\\scripts\\OpenSSL.js"],"names":["exports","OpenSSL","$cipherParams","require","$wordArray","$base64","r","t","stringify","ciphertext","Error","e","i","o","salt","WordArray","concat","toString","Base64","parse","words","slice","splice","sigBytes","CipherParams"],"mappings":";;;;;;AAAAA,OAAO,CAACC,OAAR,GAAkB,KAAK,CAAvB;;AACA,IAAIC,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA3B;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIG,CAAC,GAAI,YAAY;EACjB,SAASC,CAAT,GAAa,CAAE;;EACfA,CAAC,CAACC,SAAF,GAAc,UAAUD,CAAV,EAAa;IACvB,IAAI,CAACA,CAAC,CAACE,UAAP,EAAmB;MACf,MAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;IACH;;IACD,IAAIC,CAAJ;IACA,IAAIC,CAAC,GAAGL,CAAC,CAACE,UAAV;IACA,IAAII,CAAC,GAAGN,CAAC,CAACO,IAAV;;IACA,IAAID,CAAJ,EAAO;MACH,IAAI,YAAY,OAAOA,CAAvB,EAA0B;QACtB,MAAM,IAAIH,KAAJ,CAAU,oCAAV,CAAN;MACH;;MACDC,CAAC,GAAG,IAAIP,UAAU,CAACW,SAAf,CAAyB,CAAC,UAAD,EAAa,UAAb,CAAzB,EAAmDC,MAAnD,CAA0DH,CAA1D,EAA6DG,MAA7D,CAAoEJ,CAApE,CAAJ;IACH,CALD,MAKO;MACHD,CAAC,GAAGC,CAAJ;IACH;;IACD,OAAOD,CAAC,CAACM,QAAF,CAAWZ,OAAO,CAACa,MAAnB,CAAP;EACH,CAhBD;;EAiBAX,CAAC,CAACY,KAAF,GAAU,UAAUZ,CAAV,EAAa;IACnB,IAAII,CAAJ;IACA,IAAIC,CAAC,GAAGP,OAAO,CAACa,MAAR,CAAeC,KAAf,CAAqBZ,CAArB,CAAR;;IACA,IAAI,eAAeK,CAAC,CAACQ,KAAF,CAAQ,CAAR,CAAf,IAA6B,eAAeR,CAAC,CAACQ,KAAF,CAAQ,CAAR,CAAhD,EAA4D;MACxDT,CAAC,GAAG,IAAIP,UAAU,CAACW,SAAf,CAAyBH,CAAC,CAACQ,KAAF,CAAQC,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAzB,CAAJ;MACAT,CAAC,CAACQ,KAAF,CAAQE,MAAR,CAAe,CAAf,EAAkB,CAAlB;MACAV,CAAC,CAACW,QAAF,IAAc,EAAd;IACH;;IACD,OAAO,IAAIrB,aAAa,CAACsB,YAAlB,CAA+B;MAClCf,UAAU,EAAEG,CADsB;MAElCE,IAAI,EAAEH;IAF4B,CAA/B,CAAP;EAIH,CAZD;;EAaA,OAAOJ,CAAP;AACH,CAjCO,EAAR;;AAkCAP,OAAO,CAACC,OAAR,GAAkBK,CAAlB","sourceRoot":"/","sourcesContent":["exports.OpenSSL = void 0;\r\nvar $cipherParams = require(\"./CipherParams\");\r\nvar $wordArray = require(\"./WordArray\");\r\nvar $base64 = require(\"./Base64\");\r\nvar r = (function () {\r\n    function t() {}\r\n    t.stringify = function (t) {\r\n        if (!t.ciphertext) {\r\n            throw new Error(\"missing ciphertext in params\");\r\n        }\r\n        var e;\r\n        var i = t.ciphertext;\r\n        var o = t.salt;\r\n        if (o) {\r\n            if (\"string\" == typeof o) {\r\n                throw new Error(\"salt is expected to be a WordArray\");\r\n            }\r\n            e = new $wordArray.WordArray([1398893684, 1701076831]).concat(o).concat(i);\r\n        } else {\r\n            e = i;\r\n        }\r\n        return e.toString($base64.Base64);\r\n    };\r\n    t.parse = function (t) {\r\n        var e;\r\n        var i = $base64.Base64.parse(t);\r\n        if (1398893684 === i.words[0] && 1701076831 === i.words[1]) {\r\n            e = new $wordArray.WordArray(i.words.slice(2, 4));\r\n            i.words.splice(0, 4);\r\n            i.sigBytes -= 16;\r\n        }\r\n        return new $cipherParams.CipherParams({\r\n            ciphertext: i,\r\n            salt: e\r\n        });\r\n    };\r\n    return t;\r\n})();\r\nexports.OpenSSL = r;\r\n"]}