{"version":3,"sources":["assets\\game_script\\scripts\\SerializableCipher.js"],"names":["exports","SerializableCipher","$wordArray","require","$openSSL","$cipherParams","r","t","encrypt","e","i","o","n","Object","assign","cfg","createEncryptor","a","finalize","CipherParams","ciphertext","key","iv","algorithm","mode","padding","blockSize","formatter","format","decrypt","Error","_parse","createDecryptor","parse","WordArray","OpenSSL"],"mappings":";;;;;;AAAAA,OAAO,CAACC,kBAAR,GAA6B,KAAK,CAAlC;;AACA,IAAIC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAIE,aAAa,GAAGF,OAAO,CAAC,gBAAD,CAA3B;;AACA,IAAIG,CAAC,GAAI,YAAY;EACjB,SAASC,CAAT,GAAa,CAAE;;EACfA,CAAC,CAACC,OAAF,GAAY,UAAUD,CAAV,EAAaE,CAAb,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;IAC9B,IAAIC,CAAC,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,GAAvB,EAA4BJ,CAA5B,CAAR;IACA,IAAIL,CAAC,GAAGC,CAAC,CAACS,eAAF,CAAkBN,CAAlB,EAAqBE,CAArB,CAAR;IACA,IAAIK,CAAC,GAAGX,CAAC,CAACY,QAAF,CAAWT,CAAX,CAAR;IACA,OAAO,IAAIJ,aAAa,CAACc,YAAlB,CAA+B;MAClCC,UAAU,EAAEH,CADsB;MAElCI,GAAG,EAAEX,CAF6B;MAGlCY,EAAE,EAAEhB,CAAC,CAACS,GAAF,CAAMO,EAHwB;MAIlCC,SAAS,EAAEhB,CAJuB;MAKlCiB,IAAI,EAAElB,CAAC,CAACS,GAAF,CAAMS,IALsB;MAMlCC,OAAO,EAAEnB,CAAC,CAACS,GAAF,CAAMU,OANmB;MAOlCC,SAAS,EAAEpB,CAAC,CAACS,GAAF,CAAMW,SAPiB;MAQlCC,SAAS,EAAEf,CAAC,CAACgB;IARqB,CAA/B,CAAP;EAUH,CAdD;;EAeArB,CAAC,CAACsB,OAAF,GAAY,UAAUtB,CAAV,EAAaE,CAAb,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;IAC9B,IAAIC,CAAC,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,GAAvB,EAA4BJ,CAA5B,CAAR;;IACA,IAAI,CAACC,CAAC,CAACgB,MAAP,EAAe;MACX,MAAM,IAAIE,KAAJ,CAAU,4BAAV,CAAN;IACH;;IACD,IAAI,CAAC,CAACrB,CAAC,GAAG,KAAKsB,MAAL,CAAYtB,CAAZ,EAAeG,CAAC,CAACgB,MAAjB,CAAL,EAA+BR,UAApC,EAAgD;MAC5C,MAAM,IAAIU,KAAJ,CAAU,gCAAV,CAAN;IACH;;IACD,OAAOvB,CAAC,CAACyB,eAAF,CAAkBtB,CAAlB,EAAqBE,CAArB,EAAwBM,QAAxB,CAAiCT,CAAC,CAACW,UAAnC,CAAP;EACH,CATD;;EAUAb,CAAC,CAACwB,MAAF,GAAW,UAAUxB,CAAV,EAAaE,CAAb,EAAgB;IACvB,OAAO,YAAY,OAAOF,CAAnB,GAAuBE,CAAC,CAACwB,KAAF,CAAQ1B,CAAR,CAAvB,GAAoCA,CAA3C;EACH,CAFD;;EAGAA,CAAC,CAACQ,GAAF,GAAQ;IACJW,SAAS,EAAE,CADP;IAEJJ,EAAE,EAAE,IAAIpB,UAAU,CAACgC,SAAf,CAAyB,EAAzB,CAFA;IAGJN,MAAM,EAAExB,QAAQ,CAAC+B;EAHb,CAAR;EAKA,OAAO5B,CAAP;AACH,CApCO,EAAR;;AAqCAP,OAAO,CAACC,kBAAR,GAA6BK,CAA7B","sourceRoot":"/","sourcesContent":["exports.SerializableCipher = void 0;\r\nvar $wordArray = require(\"./WordArray\");\r\nvar $openSSL = require(\"./OpenSSL\");\r\nvar $cipherParams = require(\"./CipherParams\");\r\nvar r = (function () {\r\n    function t() {}\r\n    t.encrypt = function (t, e, i, o) {\r\n        var n = Object.assign({}, this.cfg, o);\r\n        var r = t.createEncryptor(i, n);\r\n        var a = r.finalize(e);\r\n        return new $cipherParams.CipherParams({\r\n            ciphertext: a,\r\n            key: i,\r\n            iv: r.cfg.iv,\r\n            algorithm: t,\r\n            mode: r.cfg.mode,\r\n            padding: r.cfg.padding,\r\n            blockSize: r.cfg.blockSize,\r\n            formatter: n.format\r\n        });\r\n    };\r\n    t.decrypt = function (t, e, i, o) {\r\n        var n = Object.assign({}, this.cfg, o);\r\n        if (!n.format) {\r\n            throw new Error(\"could not determine format\");\r\n        }\r\n        if (!(e = this._parse(e, n.format)).ciphertext) {\r\n            throw new Error(\"could not determine ciphertext\");\r\n        }\r\n        return t.createDecryptor(i, n).finalize(e.ciphertext);\r\n    };\r\n    t._parse = function (t, e) {\r\n        return \"string\" == typeof t ? e.parse(t) : t;\r\n    };\r\n    t.cfg = {\r\n        blockSize: 4,\r\n        iv: new $wordArray.WordArray([]),\r\n        format: $openSSL.OpenSSL\r\n    };\r\n    return t;\r\n})();\r\nexports.SerializableCipher = r;\r\n"]}