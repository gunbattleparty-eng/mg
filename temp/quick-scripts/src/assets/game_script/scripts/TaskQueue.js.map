{"version":3,"sources":["assets\\game_script\\scripts\\TaskQueue.js"],"names":["exports","TaskManager","TaskQueue","o","t","e","task","priority","n","_curTask","_taskQueue","Array","prototype","pushTask","i","length","splice","executeNextTask","clearTask","shift","console","warn","s","_taskQueues","getInstance","_instance","destory","getTaskQueue","pushTaskByTag","clearTaskQueue","clearAllTaskQueue"],"mappings":"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","sourceRoot":"/","sourcesContent":["exports.TaskManager = exports.TaskQueue = void 0;\r\nvar o = function (t, e) {\r\n    this.task = t;\r\n    this.priority = e;\r\n};\r\nvar n = (function () {\r\n    function t() {\r\n        this._curTask = null;\r\n        this._taskQueue = Array();\r\n    }\r\n    t.prototype.pushTask = function (t, e) {\r\n        if (void 0 === e) {\r\n            e = 0;\r\n        }\r\n        var i = new o(t, e);\r\n        if (this._taskQueue.length > 0) {\r\n            for (var n = this._taskQueue.length - 1; n >= 0; --n) {\r\n                if (this._taskQueue[n].priority <= e) {\r\n                    return void this._taskQueue.splice(n + 1, 0, i);\r\n                }\r\n            }\r\n        }\r\n        this._taskQueue.splice(0, 0, i);\r\n        if (null == this._curTask) {\r\n            this.executeNextTask();\r\n        }\r\n    };\r\n    t.prototype.clearTask = function () {\r\n        this._curTask = null;\r\n        this._taskQueue.length = 0;\r\n    };\r\n    t.prototype.executeNextTask = function () {\r\n        var t = this;\r\n        var e = this._taskQueue.shift() || null;\r\n        this._curTask = e;\r\n        if (e) {\r\n            e.task(function () {\r\n                e === t._curTask ? t.executeNextTask() : console.warn(\"your task finish twice!\");\r\n            });\r\n        }\r\n    };\r\n    return t;\r\n})();\r\nexports.TaskQueue = n;\r\nvar s = (function () {\r\n    function t() {\r\n        this._taskQueues = {};\r\n    }\r\n    t.getInstance = function () {\r\n        if (!this._instance) {\r\n            this._instance = new t();\r\n        }\r\n        return this._instance;\r\n    };\r\n    t.destory = function () {\r\n        this._instance = null;\r\n    };\r\n    t.prototype.pushTask = function (t, e) {\r\n        if (void 0 === e) {\r\n            e = 0;\r\n        }\r\n        return this.getTaskQueue().pushTask(t, e);\r\n    };\r\n    t.prototype.pushTaskByTag = function (t, e, i) {\r\n        if (void 0 === i) {\r\n            i = 0;\r\n        }\r\n        return this.getTaskQueue(e).pushTask(t, i);\r\n    };\r\n    t.prototype.clearTaskQueue = function (t) {\r\n        if (void 0 === t) {\r\n            t = 0;\r\n        }\r\n        var e = this._taskQueues[t];\r\n        if (e) {\r\n            e.clearTask();\r\n        }\r\n    };\r\n    t.prototype.clearAllTaskQueue = function () {\r\n        for (var t in this._taskQueues) this._taskQueues[t].clearTask();\r\n        this._taskQueues = {};\r\n    };\r\n    t.prototype.getTaskQueue = function (t) {\r\n        if (void 0 === t) {\r\n            t = 0;\r\n        }\r\n        var e = this._taskQueues[t];\r\n        if (null == e) {\r\n            e = new n();\r\n            this._taskQueues[t] = e;\r\n        }\r\n        return e;\r\n    };\r\n    t._instance = null;\r\n    return t;\r\n})();\r\nexports.TaskManager = s;\r\n"]}