
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/game_script/scripts/RemoteAudio.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '39586+xTxlC2a859ih0M65E', 'RemoteAudio');
// game_script/scripts/RemoteAudio.js

"use strict";

var $assetsLoader = require("./AssetsLoader");

var $assetsMap = require("./AssetsMap");

var $countDownUtil = require("./CountDownUtil");

var $audioPlayer = require("./AudioPlayer");

var a = function () {
  function t() {
    this.musicMap = new Map();
    this.timeRecord = new Map();
    this.currLoopMusic = new Map();
    this.isPlayingBgm = !1;
    this.isMastering = !0;
  }

  t.prototype.playMusic = function (t) {
    var e = this;
    this.musicMap.has(t) ? $audioPlayer["default"].playMusic(this.musicMap.get(t)) : $assetsLoader["default"].instance.loadRes($assetsMap.BundleNames.Public_Res, ["/sounds/" + t], cc.AudioClip, null, function (i, o) {
      var n = o[0];

      if (cc.isValid(n)) {
        n.addRef();
        e.musicMap.set(t, n);
        $audioPlayer["default"].playMusic(e.musicMap.get(t));
      }
    });
  };

  t.prototype.playEffectMusic = function (t, e) {
    var i = this;

    if (void 0 === e) {
      e = !1;
    }

    this.musicMap.has(t) ? ($audioPlayer["default"].playEffect(this.musicMap.get(t), e), e && this.currLoopMusic.set(t, this.musicMap.get(t))) : $assetsLoader["default"].instance.loadRes($assetsMap.BundleNames.Public_Res, ["/sounds/" + t], cc.AudioClip, null, function (o, n) {
      var s = n[0];

      if (cc.isValid(s)) {
        s.addRef();
        i.musicMap.set(t, s);
        $audioPlayer["default"].playEffect(s, e);

        if (e) {
          i.currLoopMusic.set(t, i.musicMap.get(t));
        }
      }
    });
  };

  t.prototype.playEffectMusicRestrict = function (t, e) {
    var i = $countDownUtil.CountDownUtil.time;

    if (!(this.timeRecord.has(t) && i - this.timeRecord.get(t) < e)) {
      this.playEffectMusic(t);
      this.timeRecord.set(t, i);
    }
  };

  t.prototype.stopEffectMusic = function (t) {
    if (this.musicMap.has(t)) {
      $audioPlayer["default"].stopEffect(this.musicMap.get(t));
    }
  };

  t.prototype.stopAllEffectMusic = function () {
    $audioPlayer["default"].stopAllEffect();
  };

  t.prototype.clearLoopEffect = function () {
    this.currLoopMusic.clear();
  };

  t.prototype.playLoopEffect = function (t) {
    if (!this.currLoopMusic.has(t)) {
      this.playEffectMusic(t, !0);
    }
  };

  t.prototype.stopLoopEffect = function (t) {
    if (this.currLoopMusic.has(t)) {
      this.stopEffectMusic(t);
      this.currLoopMusic["delete"](t);
    }
  };

  t.prototype.pauseAllEffectMusic = function () {
    $audioPlayer["default"].pauseAllEffect();
  };

  t.prototype.resumeAllEffectMusic = function () {
    $audioPlayer["default"].resumeAllEffect();
  };

  t.prototype.releaseEffect = function (t) {
    if (this.musicMap.has(t)) {
      this.musicMap.get(t).decRef();
    }
  };

  t.prototype.playBGM = function (t, e) {
    if (void 0 === t) {
      t = !0;
    }

    if (void 0 === e) {
      e = "";
    }

    if (!(this.isMastering && t && this.isPlayingBgm)) {
      this.stopAllEffectMusic();
      $audioPlayer["default"].stopAllMusic();
      this.isMastering = t;
      t ? this.playMusic("BGM") : this.playMusic(e);
      this.isPlayingBgm = !0;
    }
  };

  t.prototype.stopBGM = function () {
    this.isPlayingBgm = !1;
    $audioPlayer["default"].stopAll();
  };

  t.instance = new t();
  return t;
}();

exports["default"] = a;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcZ2FtZV9zY3JpcHRcXHNjcmlwdHNcXFJlbW90ZUF1ZGlvLmpzIl0sIm5hbWVzIjpbIiRhc3NldHNMb2FkZXIiLCJyZXF1aXJlIiwiJGFzc2V0c01hcCIsIiRjb3VudERvd25VdGlsIiwiJGF1ZGlvUGxheWVyIiwiYSIsInQiLCJtdXNpY01hcCIsIk1hcCIsInRpbWVSZWNvcmQiLCJjdXJyTG9vcE11c2ljIiwiaXNQbGF5aW5nQmdtIiwiaXNNYXN0ZXJpbmciLCJwcm90b3R5cGUiLCJwbGF5TXVzaWMiLCJlIiwiaGFzIiwiZ2V0IiwiaW5zdGFuY2UiLCJsb2FkUmVzIiwiQnVuZGxlTmFtZXMiLCJQdWJsaWNfUmVzIiwiY2MiLCJBdWRpb0NsaXAiLCJpIiwibyIsIm4iLCJpc1ZhbGlkIiwiYWRkUmVmIiwic2V0IiwicGxheUVmZmVjdE11c2ljIiwicGxheUVmZmVjdCIsInMiLCJwbGF5RWZmZWN0TXVzaWNSZXN0cmljdCIsIkNvdW50RG93blV0aWwiLCJ0aW1lIiwic3RvcEVmZmVjdE11c2ljIiwic3RvcEVmZmVjdCIsInN0b3BBbGxFZmZlY3RNdXNpYyIsInN0b3BBbGxFZmZlY3QiLCJjbGVhckxvb3BFZmZlY3QiLCJjbGVhciIsInBsYXlMb29wRWZmZWN0Iiwic3RvcExvb3BFZmZlY3QiLCJwYXVzZUFsbEVmZmVjdE11c2ljIiwicGF1c2VBbGxFZmZlY3QiLCJyZXN1bWVBbGxFZmZlY3RNdXNpYyIsInJlc3VtZUFsbEVmZmVjdCIsInJlbGVhc2VFZmZlY3QiLCJkZWNSZWYiLCJwbGF5QkdNIiwic3RvcEFsbE11c2ljIiwic3RvcEJHTSIsInN0b3BBbGwiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLGFBQWEsR0FBR0MsT0FBTyxDQUFDLGdCQUFELENBQTNCOztBQUNBLElBQUlDLFVBQVUsR0FBR0QsT0FBTyxDQUFDLGFBQUQsQ0FBeEI7O0FBQ0EsSUFBSUUsY0FBYyxHQUFHRixPQUFPLENBQUMsaUJBQUQsQ0FBNUI7O0FBQ0EsSUFBSUcsWUFBWSxHQUFHSCxPQUFPLENBQUMsZUFBRCxDQUExQjs7QUFDQSxJQUFJSSxDQUFDLEdBQUksWUFBWTtFQUNqQixTQUFTQyxDQUFULEdBQWE7SUFDVCxLQUFLQyxRQUFMLEdBQWdCLElBQUlDLEdBQUosRUFBaEI7SUFDQSxLQUFLQyxVQUFMLEdBQWtCLElBQUlELEdBQUosRUFBbEI7SUFDQSxLQUFLRSxhQUFMLEdBQXFCLElBQUlGLEdBQUosRUFBckI7SUFDQSxLQUFLRyxZQUFMLEdBQW9CLENBQUMsQ0FBckI7SUFDQSxLQUFLQyxXQUFMLEdBQW1CLENBQUMsQ0FBcEI7RUFDSDs7RUFDRE4sQ0FBQyxDQUFDTyxTQUFGLENBQVlDLFNBQVosR0FBd0IsVUFBVVIsQ0FBVixFQUFhO0lBQ2pDLElBQUlTLENBQUMsR0FBRyxJQUFSO0lBQ0EsS0FBS1IsUUFBTCxDQUFjUyxHQUFkLENBQWtCVixDQUFsQixJQUNNRixZQUFZLFdBQVosQ0FBcUJVLFNBQXJCLENBQStCLEtBQUtQLFFBQUwsQ0FBY1UsR0FBZCxDQUFrQlgsQ0FBbEIsQ0FBL0IsQ0FETixHQUVNTixhQUFhLFdBQWIsQ0FBc0JrQixRQUF0QixDQUErQkMsT0FBL0IsQ0FDSWpCLFVBQVUsQ0FBQ2tCLFdBQVgsQ0FBdUJDLFVBRDNCLEVBRUksQ0FBQyxhQUFhZixDQUFkLENBRkosRUFHSWdCLEVBQUUsQ0FBQ0MsU0FIUCxFQUlJLElBSkosRUFLSSxVQUFVQyxDQUFWLEVBQWFDLENBQWIsRUFBZ0I7TUFDWixJQUFJQyxDQUFDLEdBQUdELENBQUMsQ0FBQyxDQUFELENBQVQ7O01BQ0EsSUFBSUgsRUFBRSxDQUFDSyxPQUFILENBQVdELENBQVgsQ0FBSixFQUFtQjtRQUNmQSxDQUFDLENBQUNFLE1BQUY7UUFDQWIsQ0FBQyxDQUFDUixRQUFGLENBQVdzQixHQUFYLENBQWV2QixDQUFmLEVBQWtCb0IsQ0FBbEI7UUFDQXRCLFlBQVksV0FBWixDQUFxQlUsU0FBckIsQ0FBK0JDLENBQUMsQ0FBQ1IsUUFBRixDQUFXVSxHQUFYLENBQWVYLENBQWYsQ0FBL0I7TUFDSDtJQUNKLENBWkwsQ0FGTjtFQWdCSCxDQWxCRDs7RUFtQkFBLENBQUMsQ0FBQ08sU0FBRixDQUFZaUIsZUFBWixHQUE4QixVQUFVeEIsQ0FBVixFQUFhUyxDQUFiLEVBQWdCO0lBQzFDLElBQUlTLENBQUMsR0FBRyxJQUFSOztJQUNBLElBQUksS0FBSyxDQUFMLEtBQVdULENBQWYsRUFBa0I7TUFDZEEsQ0FBQyxHQUFHLENBQUMsQ0FBTDtJQUNIOztJQUNELEtBQUtSLFFBQUwsQ0FBY1MsR0FBZCxDQUFrQlYsQ0FBbEIsS0FDT0YsWUFBWSxXQUFaLENBQXFCMkIsVUFBckIsQ0FBZ0MsS0FBS3hCLFFBQUwsQ0FBY1UsR0FBZCxDQUFrQlgsQ0FBbEIsQ0FBaEMsRUFBc0RTLENBQXRELEdBQ0RBLENBQUMsSUFBSSxLQUFLTCxhQUFMLENBQW1CbUIsR0FBbkIsQ0FBdUJ2QixDQUF2QixFQUEwQixLQUFLQyxRQUFMLENBQWNVLEdBQWQsQ0FBa0JYLENBQWxCLENBQTFCLENBRlgsSUFHTU4sYUFBYSxXQUFiLENBQXNCa0IsUUFBdEIsQ0FBK0JDLE9BQS9CLENBQ0lqQixVQUFVLENBQUNrQixXQUFYLENBQXVCQyxVQUQzQixFQUVJLENBQUMsYUFBYWYsQ0FBZCxDQUZKLEVBR0lnQixFQUFFLENBQUNDLFNBSFAsRUFJSSxJQUpKLEVBS0ksVUFBVUUsQ0FBVixFQUFhQyxDQUFiLEVBQWdCO01BQ1osSUFBSU0sQ0FBQyxHQUFHTixDQUFDLENBQUMsQ0FBRCxDQUFUOztNQUNBLElBQUlKLEVBQUUsQ0FBQ0ssT0FBSCxDQUFXSyxDQUFYLENBQUosRUFBbUI7UUFDZkEsQ0FBQyxDQUFDSixNQUFGO1FBQ0FKLENBQUMsQ0FBQ2pCLFFBQUYsQ0FBV3NCLEdBQVgsQ0FBZXZCLENBQWYsRUFBa0IwQixDQUFsQjtRQUNBNUIsWUFBWSxXQUFaLENBQXFCMkIsVUFBckIsQ0FBZ0NDLENBQWhDLEVBQW1DakIsQ0FBbkM7O1FBQ0EsSUFBSUEsQ0FBSixFQUFPO1VBQ0hTLENBQUMsQ0FBQ2QsYUFBRixDQUFnQm1CLEdBQWhCLENBQW9CdkIsQ0FBcEIsRUFBdUJrQixDQUFDLENBQUNqQixRQUFGLENBQVdVLEdBQVgsQ0FBZVgsQ0FBZixDQUF2QjtRQUNIO01BQ0o7SUFDSixDQWZMLENBSE47RUFvQkgsQ0F6QkQ7O0VBMEJBQSxDQUFDLENBQUNPLFNBQUYsQ0FBWW9CLHVCQUFaLEdBQXNDLFVBQVUzQixDQUFWLEVBQWFTLENBQWIsRUFBZ0I7SUFDbEQsSUFBSVMsQ0FBQyxHQUFHckIsY0FBYyxDQUFDK0IsYUFBZixDQUE2QkMsSUFBckM7O0lBQ0EsSUFBSSxFQUFFLEtBQUsxQixVQUFMLENBQWdCTyxHQUFoQixDQUFvQlYsQ0FBcEIsS0FBMEJrQixDQUFDLEdBQUcsS0FBS2YsVUFBTCxDQUFnQlEsR0FBaEIsQ0FBb0JYLENBQXBCLENBQUosR0FBNkJTLENBQXpELENBQUosRUFBaUU7TUFDN0QsS0FBS2UsZUFBTCxDQUFxQnhCLENBQXJCO01BQ0EsS0FBS0csVUFBTCxDQUFnQm9CLEdBQWhCLENBQW9CdkIsQ0FBcEIsRUFBdUJrQixDQUF2QjtJQUNIO0VBQ0osQ0FORDs7RUFPQWxCLENBQUMsQ0FBQ08sU0FBRixDQUFZdUIsZUFBWixHQUE4QixVQUFVOUIsQ0FBVixFQUFhO0lBQ3ZDLElBQUksS0FBS0MsUUFBTCxDQUFjUyxHQUFkLENBQWtCVixDQUFsQixDQUFKLEVBQTBCO01BQ3RCRixZQUFZLFdBQVosQ0FBcUJpQyxVQUFyQixDQUFnQyxLQUFLOUIsUUFBTCxDQUFjVSxHQUFkLENBQWtCWCxDQUFsQixDQUFoQztJQUNIO0VBQ0osQ0FKRDs7RUFLQUEsQ0FBQyxDQUFDTyxTQUFGLENBQVl5QixrQkFBWixHQUFpQyxZQUFZO0lBQ3pDbEMsWUFBWSxXQUFaLENBQXFCbUMsYUFBckI7RUFDSCxDQUZEOztFQUdBakMsQ0FBQyxDQUFDTyxTQUFGLENBQVkyQixlQUFaLEdBQThCLFlBQVk7SUFDdEMsS0FBSzlCLGFBQUwsQ0FBbUIrQixLQUFuQjtFQUNILENBRkQ7O0VBR0FuQyxDQUFDLENBQUNPLFNBQUYsQ0FBWTZCLGNBQVosR0FBNkIsVUFBVXBDLENBQVYsRUFBYTtJQUN0QyxJQUFJLENBQUMsS0FBS0ksYUFBTCxDQUFtQk0sR0FBbkIsQ0FBdUJWLENBQXZCLENBQUwsRUFBZ0M7TUFDNUIsS0FBS3dCLGVBQUwsQ0FBcUJ4QixDQUFyQixFQUF3QixDQUFDLENBQXpCO0lBQ0g7RUFDSixDQUpEOztFQUtBQSxDQUFDLENBQUNPLFNBQUYsQ0FBWThCLGNBQVosR0FBNkIsVUFBVXJDLENBQVYsRUFBYTtJQUN0QyxJQUFJLEtBQUtJLGFBQUwsQ0FBbUJNLEdBQW5CLENBQXVCVixDQUF2QixDQUFKLEVBQStCO01BQzNCLEtBQUs4QixlQUFMLENBQXFCOUIsQ0FBckI7TUFDQSxLQUFLSSxhQUFMLFdBQTBCSixDQUExQjtJQUNIO0VBQ0osQ0FMRDs7RUFNQUEsQ0FBQyxDQUFDTyxTQUFGLENBQVkrQixtQkFBWixHQUFrQyxZQUFZO0lBQzFDeEMsWUFBWSxXQUFaLENBQXFCeUMsY0FBckI7RUFDSCxDQUZEOztFQUdBdkMsQ0FBQyxDQUFDTyxTQUFGLENBQVlpQyxvQkFBWixHQUFtQyxZQUFZO0lBQzNDMUMsWUFBWSxXQUFaLENBQXFCMkMsZUFBckI7RUFDSCxDQUZEOztFQUdBekMsQ0FBQyxDQUFDTyxTQUFGLENBQVltQyxhQUFaLEdBQTRCLFVBQVUxQyxDQUFWLEVBQWE7SUFDckMsSUFBSSxLQUFLQyxRQUFMLENBQWNTLEdBQWQsQ0FBa0JWLENBQWxCLENBQUosRUFBMEI7TUFDdEIsS0FBS0MsUUFBTCxDQUFjVSxHQUFkLENBQWtCWCxDQUFsQixFQUFxQjJDLE1BQXJCO0lBQ0g7RUFDSixDQUpEOztFQUtBM0MsQ0FBQyxDQUFDTyxTQUFGLENBQVlxQyxPQUFaLEdBQXNCLFVBQVU1QyxDQUFWLEVBQWFTLENBQWIsRUFBZ0I7SUFDbEMsSUFBSSxLQUFLLENBQUwsS0FBV1QsQ0FBZixFQUFrQjtNQUNkQSxDQUFDLEdBQUcsQ0FBQyxDQUFMO0lBQ0g7O0lBQ0QsSUFBSSxLQUFLLENBQUwsS0FBV1MsQ0FBZixFQUFrQjtNQUNkQSxDQUFDLEdBQUcsRUFBSjtJQUNIOztJQUNELElBQUksRUFBRSxLQUFLSCxXQUFMLElBQW9CTixDQUFwQixJQUF5QixLQUFLSyxZQUFoQyxDQUFKLEVBQW1EO01BQy9DLEtBQUsyQixrQkFBTDtNQUNBbEMsWUFBWSxXQUFaLENBQXFCK0MsWUFBckI7TUFDQSxLQUFLdkMsV0FBTCxHQUFtQk4sQ0FBbkI7TUFDQUEsQ0FBQyxHQUFHLEtBQUtRLFNBQUwsQ0FBZSxLQUFmLENBQUgsR0FBMkIsS0FBS0EsU0FBTCxDQUFlQyxDQUFmLENBQTVCO01BQ0EsS0FBS0osWUFBTCxHQUFvQixDQUFDLENBQXJCO0lBQ0g7RUFDSixDQWREOztFQWVBTCxDQUFDLENBQUNPLFNBQUYsQ0FBWXVDLE9BQVosR0FBc0IsWUFBWTtJQUM5QixLQUFLekMsWUFBTCxHQUFvQixDQUFDLENBQXJCO0lBQ0FQLFlBQVksV0FBWixDQUFxQmlELE9BQXJCO0VBQ0gsQ0FIRDs7RUFJQS9DLENBQUMsQ0FBQ1ksUUFBRixHQUFhLElBQUlaLENBQUosRUFBYjtFQUNBLE9BQU9BLENBQVA7QUFDSCxDQWxITyxFQUFSOztBQW1IQWdELE9BQU8sV0FBUCxHQUFrQmpELENBQWxCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgJGFzc2V0c0xvYWRlciA9IHJlcXVpcmUoXCIuL0Fzc2V0c0xvYWRlclwiKTtcclxudmFyICRhc3NldHNNYXAgPSByZXF1aXJlKFwiLi9Bc3NldHNNYXBcIik7XHJcbnZhciAkY291bnREb3duVXRpbCA9IHJlcXVpcmUoXCIuL0NvdW50RG93blV0aWxcIik7XHJcbnZhciAkYXVkaW9QbGF5ZXIgPSByZXF1aXJlKFwiLi9BdWRpb1BsYXllclwiKTtcclxudmFyIGEgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gdCgpIHtcclxuICAgICAgICB0aGlzLm11c2ljTWFwID0gbmV3IE1hcCgpO1xyXG4gICAgICAgIHRoaXMudGltZVJlY29yZCA9IG5ldyBNYXAoKTtcclxuICAgICAgICB0aGlzLmN1cnJMb29wTXVzaWMgPSBuZXcgTWFwKCk7XHJcbiAgICAgICAgdGhpcy5pc1BsYXlpbmdCZ20gPSAhMTtcclxuICAgICAgICB0aGlzLmlzTWFzdGVyaW5nID0gITA7XHJcbiAgICB9XHJcbiAgICB0LnByb3RvdHlwZS5wbGF5TXVzaWMgPSBmdW5jdGlvbiAodCkge1xyXG4gICAgICAgIHZhciBlID0gdGhpcztcclxuICAgICAgICB0aGlzLm11c2ljTWFwLmhhcyh0KVxyXG4gICAgICAgICAgICA/ICRhdWRpb1BsYXllci5kZWZhdWx0LnBsYXlNdXNpYyh0aGlzLm11c2ljTWFwLmdldCh0KSlcclxuICAgICAgICAgICAgOiAkYXNzZXRzTG9hZGVyLmRlZmF1bHQuaW5zdGFuY2UubG9hZFJlcyhcclxuICAgICAgICAgICAgICAgICAgJGFzc2V0c01hcC5CdW5kbGVOYW1lcy5QdWJsaWNfUmVzLFxyXG4gICAgICAgICAgICAgICAgICBbXCIvc291bmRzL1wiICsgdF0sXHJcbiAgICAgICAgICAgICAgICAgIGNjLkF1ZGlvQ2xpcCxcclxuICAgICAgICAgICAgICAgICAgbnVsbCxcclxuICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKGksIG8pIHtcclxuICAgICAgICAgICAgICAgICAgICAgIHZhciBuID0gb1swXTtcclxuICAgICAgICAgICAgICAgICAgICAgIGlmIChjYy5pc1ZhbGlkKG4pKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbi5hZGRSZWYoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBlLm11c2ljTWFwLnNldCh0LCBuKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAkYXVkaW9QbGF5ZXIuZGVmYXVsdC5wbGF5TXVzaWMoZS5tdXNpY01hcC5nZXQodCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgKTtcclxuICAgIH07XHJcbiAgICB0LnByb3RvdHlwZS5wbGF5RWZmZWN0TXVzaWMgPSBmdW5jdGlvbiAodCwgZSkge1xyXG4gICAgICAgIHZhciBpID0gdGhpcztcclxuICAgICAgICBpZiAodm9pZCAwID09PSBlKSB7XHJcbiAgICAgICAgICAgIGUgPSAhMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5tdXNpY01hcC5oYXModClcclxuICAgICAgICAgICAgPyAoJGF1ZGlvUGxheWVyLmRlZmF1bHQucGxheUVmZmVjdCh0aGlzLm11c2ljTWFwLmdldCh0KSwgZSksXHJcbiAgICAgICAgICAgICAgZSAmJiB0aGlzLmN1cnJMb29wTXVzaWMuc2V0KHQsIHRoaXMubXVzaWNNYXAuZ2V0KHQpKSlcclxuICAgICAgICAgICAgOiAkYXNzZXRzTG9hZGVyLmRlZmF1bHQuaW5zdGFuY2UubG9hZFJlcyhcclxuICAgICAgICAgICAgICAgICAgJGFzc2V0c01hcC5CdW5kbGVOYW1lcy5QdWJsaWNfUmVzLFxyXG4gICAgICAgICAgICAgICAgICBbXCIvc291bmRzL1wiICsgdF0sXHJcbiAgICAgICAgICAgICAgICAgIGNjLkF1ZGlvQ2xpcCxcclxuICAgICAgICAgICAgICAgICAgbnVsbCxcclxuICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKG8sIG4pIHtcclxuICAgICAgICAgICAgICAgICAgICAgIHZhciBzID0gblswXTtcclxuICAgICAgICAgICAgICAgICAgICAgIGlmIChjYy5pc1ZhbGlkKHMpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcy5hZGRSZWYoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBpLm11c2ljTWFwLnNldCh0LCBzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAkYXVkaW9QbGF5ZXIuZGVmYXVsdC5wbGF5RWZmZWN0KHMsIGUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGkuY3Vyckxvb3BNdXNpYy5zZXQodCwgaS5tdXNpY01hcC5nZXQodCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICk7XHJcbiAgICB9O1xyXG4gICAgdC5wcm90b3R5cGUucGxheUVmZmVjdE11c2ljUmVzdHJpY3QgPSBmdW5jdGlvbiAodCwgZSkge1xyXG4gICAgICAgIHZhciBpID0gJGNvdW50RG93blV0aWwuQ291bnREb3duVXRpbC50aW1lO1xyXG4gICAgICAgIGlmICghKHRoaXMudGltZVJlY29yZC5oYXModCkgJiYgaSAtIHRoaXMudGltZVJlY29yZC5nZXQodCkgPCBlKSkge1xyXG4gICAgICAgICAgICB0aGlzLnBsYXlFZmZlY3RNdXNpYyh0KTtcclxuICAgICAgICAgICAgdGhpcy50aW1lUmVjb3JkLnNldCh0LCBpKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgdC5wcm90b3R5cGUuc3RvcEVmZmVjdE11c2ljID0gZnVuY3Rpb24gKHQpIHtcclxuICAgICAgICBpZiAodGhpcy5tdXNpY01hcC5oYXModCkpIHtcclxuICAgICAgICAgICAgJGF1ZGlvUGxheWVyLmRlZmF1bHQuc3RvcEVmZmVjdCh0aGlzLm11c2ljTWFwLmdldCh0KSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHQucHJvdG90eXBlLnN0b3BBbGxFZmZlY3RNdXNpYyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkYXVkaW9QbGF5ZXIuZGVmYXVsdC5zdG9wQWxsRWZmZWN0KCk7XHJcbiAgICB9O1xyXG4gICAgdC5wcm90b3R5cGUuY2xlYXJMb29wRWZmZWN0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuY3Vyckxvb3BNdXNpYy5jbGVhcigpO1xyXG4gICAgfTtcclxuICAgIHQucHJvdG90eXBlLnBsYXlMb29wRWZmZWN0ID0gZnVuY3Rpb24gKHQpIHtcclxuICAgICAgICBpZiAoIXRoaXMuY3Vyckxvb3BNdXNpYy5oYXModCkpIHtcclxuICAgICAgICAgICAgdGhpcy5wbGF5RWZmZWN0TXVzaWModCwgITApO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICB0LnByb3RvdHlwZS5zdG9wTG9vcEVmZmVjdCA9IGZ1bmN0aW9uICh0KSB7XHJcbiAgICAgICAgaWYgKHRoaXMuY3Vyckxvb3BNdXNpYy5oYXModCkpIHtcclxuICAgICAgICAgICAgdGhpcy5zdG9wRWZmZWN0TXVzaWModCk7XHJcbiAgICAgICAgICAgIHRoaXMuY3Vyckxvb3BNdXNpYy5kZWxldGUodCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHQucHJvdG90eXBlLnBhdXNlQWxsRWZmZWN0TXVzaWMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJGF1ZGlvUGxheWVyLmRlZmF1bHQucGF1c2VBbGxFZmZlY3QoKTtcclxuICAgIH07XHJcbiAgICB0LnByb3RvdHlwZS5yZXN1bWVBbGxFZmZlY3RNdXNpYyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkYXVkaW9QbGF5ZXIuZGVmYXVsdC5yZXN1bWVBbGxFZmZlY3QoKTtcclxuICAgIH07XHJcbiAgICB0LnByb3RvdHlwZS5yZWxlYXNlRWZmZWN0ID0gZnVuY3Rpb24gKHQpIHtcclxuICAgICAgICBpZiAodGhpcy5tdXNpY01hcC5oYXModCkpIHtcclxuICAgICAgICAgICAgdGhpcy5tdXNpY01hcC5nZXQodCkuZGVjUmVmKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHQucHJvdG90eXBlLnBsYXlCR00gPSBmdW5jdGlvbiAodCwgZSkge1xyXG4gICAgICAgIGlmICh2b2lkIDAgPT09IHQpIHtcclxuICAgICAgICAgICAgdCA9ICEwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodm9pZCAwID09PSBlKSB7XHJcbiAgICAgICAgICAgIGUgPSBcIlwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoISh0aGlzLmlzTWFzdGVyaW5nICYmIHQgJiYgdGhpcy5pc1BsYXlpbmdCZ20pKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc3RvcEFsbEVmZmVjdE11c2ljKCk7XHJcbiAgICAgICAgICAgICRhdWRpb1BsYXllci5kZWZhdWx0LnN0b3BBbGxNdXNpYygpO1xyXG4gICAgICAgICAgICB0aGlzLmlzTWFzdGVyaW5nID0gdDtcclxuICAgICAgICAgICAgdCA/IHRoaXMucGxheU11c2ljKFwiQkdNXCIpIDogdGhpcy5wbGF5TXVzaWMoZSk7XHJcbiAgICAgICAgICAgIHRoaXMuaXNQbGF5aW5nQmdtID0gITA7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHQucHJvdG90eXBlLnN0b3BCR00gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5pc1BsYXlpbmdCZ20gPSAhMTtcclxuICAgICAgICAkYXVkaW9QbGF5ZXIuZGVmYXVsdC5zdG9wQWxsKCk7XHJcbiAgICB9O1xyXG4gICAgdC5pbnN0YW5jZSA9IG5ldyB0KCk7XHJcbiAgICByZXR1cm4gdDtcclxufSkoKTtcclxuZXhwb3J0cy5kZWZhdWx0ID0gYTtcclxuIl19