{
  "__type__": "cc.TextAsset",
  "_name": "GravityAnalyticsSDK.d",
  "_objFlags": 0,
  "_native": "",
  "text": "declare class GravityAnalyticsAPI {\r\n  constructor(config: any);\r\n  setupAndStart(): void;\r\n  track(eventName: string): void;\r\n  track(eventName: string, properties: any): void;\r\n  track(eventName: string, properties: any, time: any): void;\r\n  track(eventName: string, properties: any, time: any, onComplete: any): void;\r\n  track(taEvent: any): void;\r\n  timeEvent(eventName: string): void;\r\n  login(accoundId: string): void;\r\n  logout(): void;\r\n  setSuperProperties(properties: any): void;\r\n  unsetSuperProperty(properties: any): void;\r\n  clearSuperProperties(): void;\r\n  getSuperProperties(): any;\r\n  getSendProperties(): any;\r\n  registerEvent(): void;\r\n  loginEvent(): void;\r\n  logoutEvent(): void;\r\n  payEvent(\r\n    pay_amount: number,\r\n    pay_type: string,\r\n    order_id: string,\r\n    pay_reason: string,\r\n    pay_method: string\r\n  ): void;\r\n  adShowEvent(ad_type: string, ad_unit_id: string, otherProperties: any): void;\r\n  bindTAThirdPlatform(taAccountId: string, taDistinctId: string): void;\r\n  initialize(data: any): any;\r\n  initializeWithHistoryUserInfo(\r\n    data: any,\r\n    history_info: {\r\n      company: string;\r\n      create_time: number;\r\n    }\r\n  ): any;\r\n  queryUserInfo(): any;\r\n  registerApp(properties: any): void;\r\n  userSet(properties: any): void;\r\n  userSetOnce(properties: any): void;\r\n  userAppend(properties: any): void;\r\n  userUniqAppend(properties: any): void;\r\n  userAdd(properties: any): void;\r\n  userUnset(property: string): void;\r\n  userDel(): void;\r\n  authorizeOpenID(distinctId: string): void;\r\n  identify(distinctId: string): void;\r\n  initInstance(name: string): GravityAnalyticsAPI;\r\n  initInstance(name: string, config: any): GravityAnalyticsAPI;\r\n  lightInstance(name: string): any;\r\n  setDynamicSuperProperties(properties: any): void;\r\n  getDeviceId(callback?: any): string;\r\n  getDistinctId(callback?: any): string;\r\n  getAccountId(callback?: any): string;\r\n  getPresetProperties(callback?: any): any;\r\n  /**\r\n   * 暂停/开启上报\r\n   * @param {bool} enabled YES：开启上报 NO：暂停上报\r\n   * @deprecated This method is deprecated, use setTrackStatus() instand.\r\n   */\r\n  enableTracking(enabled: boolean): void;\r\n  /**\r\n   * 停止上报，后续的上报和设置都无效，数据将清空\r\n   * @deprecated This method is deprecated, use setTrackStatus() instand.\r\n   */\r\n  optOutTracking(): void;\r\n  /**\r\n   * 停止上报，后续的上报和设置都无效，数据将清空，并且发送 user_del\r\n   * @deprecated This method is deprecated, use setTrackStatus() instand.\r\n   */\r\n  optOutTrackingAndDeleteUser(): void;\r\n  /**\r\n   * 允许上报\r\n   * @deprecated This method is deprecated, use setTrackStatus() instand.\r\n   */\r\n  optInTracking(): void;\r\n  /**\r\n   * 设置数据上报状态\r\n   * PAUSE 暂停数据上报\r\n   * STOP 停止数据上报，并清除缓存\r\n   * SAVE_ONLY 数据入库，但不上报 (接入Native原生可支持，JS暂不支持此状态，默认等同 NORMAL)\r\n   * NORMAL 恢复数据上报\r\n   * @param {string} status 上报状态\r\n   */\r\n  setTrackStatus(status: string): void;\r\n}\r\n"
}